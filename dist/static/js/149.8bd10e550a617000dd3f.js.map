{"version":3,"sources":["webpack:///static/js/149.8bd10e550a617000dd3f.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js?2c2b**","webpack:///./~/echarts/lib/chart/pie.js?ec17**","webpack:///./~/echarts/lib/chart/pie/PieSeries.js?2a55**","webpack:///./~/echarts/lib/chart/pie/PieView.js?c082**","webpack:///./~/echarts/lib/chart/pie/labelLayout.js?a7c9**","webpack:///./~/echarts/lib/chart/pie/pieLayout.js?b323**","webpack:///./~/echarts/lib/component/helper/selectableMixin.js?ad72**","webpack:///./~/echarts/lib/processor/dataFilter.js?d6e4**","webpack:///./~/echarts/lib/visual/dataColor.js?fa8e**","webpack:///jituan_cbxx.vue","webpack:///./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue?7097","webpack:///./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue?5f6f","webpack:///./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue","webpack:///./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue?7330","webpack:///./~/echarts/lib/chart/gauge.js?b479***","webpack:///./~/echarts/lib/chart/gauge/GaugeSeries.js?6baa***","webpack:///./~/echarts/lib/chart/gauge/GaugeView.js?2620***","webpack:///./~/echarts/lib/chart/gauge/PointerPath.js?3d92***"],"names":["webpackJsonp","1004","module","exports","__webpack_require__","_default","seriesType","actionInfos","zrUtil","each","actionInfo","update","echarts","registerAction","payload","ecModel","selected","eachComponent","mainType","subType","query","seriesModel","method","name","dataIndex","data","getData","idx","getName","isSelected","1010","createDataSelectAction","dataColor","pieLayout","dataFilter","type","event","registerVisual","curry","registerLayout","registerProcessor","1011","List","modelUtil","_number","getPercentWithPrecision","completeDimensions","dataSelectableMixin","PieSeries","extendSeriesModel","init","option","superApply","this","arguments","legendDataProvider","getRawData","updateSelectedMap","_defaultLabelLine","mergeOption","newOption","superCall","getInitialData","dimensions","list","initData","getDataParams","params","valueList","value","push","percent","hostModel","get","$vars","defaultEmphasis","labelLine","labelLineNormalOpt","normal","labelLineEmphasisOpt","emphasis","show","label","defaultOption","zlevel","z","legendHoverLink","hoverAnimation","center","radius","clockwise","startAngle","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","rotate","position","length","length2","smooth","lineStyle","width","itemStyle","borderWidth","animationType","animationEasing","mixin","1012","updateDataSelected","uid","hasAnimation","api","dispatchAction","from","seriesId","id","toggleItemSelected","getItemGraphicEl","getItemLayout","el","layout","midAngle","endAngle","dx","Math","cos","dy","sin","offset","animate","when","start","attr","PiePiece","onEmphasis","polyline","ignore","hoverIgnore","text","onNormal","normalIgnore","graphic","Group","call","sector","Sector","z2","Polyline","Text","add","updateData","on","ChartView","piePieceProto","prototype","firstCreate","stopAnimation","animateTo","shape","r","childAt","itemModel","getItemModel","sectorShape","extend","setShape","getShallow","r0","initProps","updateProps","itemStyleModel","getModel","visualColor","getItemVisual","useStyle","defaults","lineJoin","fill","getItemStyle","hoverStyle","cursorStyle","off","isAnimationEnabled","_updateLabel","setHoverStyle","labelText","labelLayout","points","linePoints","x","y","style","rotation","origin","labelModel","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","textAlign","textVerticalAlign","verticalAlign","opacity","setStyle","stroke","getLineStyle","inherits","PieView","sectorGroup","_sectorGroup","render","oldData","_data","group","isFirstRender","onSectorClick","selectedMode","diff","piePiece","eachChild","child","setItemGraphicEl","newIdx","oldIdx","remove","execute","count","max","getWidth","getHeight","removeClipPath","bind","setClipPath","_createClipPath","cx","cy","dispose","cb","clipPath","PI","containPoint","point","itemLayout","sqrt","1013","adjustSingleSide","dir","viewWidth","viewHeight","shiftUp","end","delta","j","height","changeX","isDownList","lastDeltaX","Number","MAX_VALUE","i","l","deltaY","abs","len","len2","deltaX","sort","a","b","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","dist","hasLabelRotate","textX","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x1","y1","x2","y2","x3","y3","font","getFont","labelRotate","getFormattedLabel","textRect","textContain","getBoundingRect","1014","eachSeriesByType","isArray","size","min","parsePercent","RADIAN","validDataCount","isNaN","sum","getSum","unitRadian","roseType","extent","getDataExtent","restAngle","PI2","valueSumLargerThanMinAngle","currentAngle","angle","setItemLayout","NaN","linearMap","1015","targetList","_targetList","slice","_selectTargetMap","reduce","targetMap","target","set","createHashMap","select","unSelect","toggleSelected","1017","legendModels","findComponents","series","filterSelf","1018","paletteScope","eachRawSeriesByType","dataAll","idxMap","isSeriesFiltered","rawIdx","getRawIndex","filteredIdx","singleDataColor","setItemVisual","color","getColorFromPalette","1160","__webpack_exports__","Object","defineProperty","isday","isyear","ismon","groupnameData","groupdateData","groupqtyData","wrapHeight","wrapWidth","activated","mounted","watch","$store.state.JTweekTextIV","methods","getweekText","getDivHeight","$refs","offsetHeight","offsetWidth","_this","JTtext","$store","state","JTweekTextIV","setTimeout","getlist","_this2","tempData","dataI","getAjax","then","result","status","sysname","returnWeek","barWidth","shadowColor","shadowBlur","shadowOffsetY","returnReconstruction","condatelist","amountslist","map","item","toFixed","initEchart","setEchart","year_chart","mon_chart","setOption","tooltip","trigger","axisPointer","legend","right","grid","left","bottom","xAxis","axisTick","alignWithLabel","yAxis","formatter","icon","shadowOffsetX","1341","version","sources","names","mappings","file","sourcesContent","sourceRoot","1472","content","locals","1531","injectStyle","ssrContext","Component","1669","_vm","_h","$createElement","_c","_self","ref","staticClass","_e","_v","staticRenderFns","918","919","SeriesModel","GaugeSeries","dataOpt","splitNumber","axisLine","splitLine","axisLabel","distance","pointer","title","offsetCenter","fontSize","detail","backgroundColor","borderColor","padding","920","parsePosition","formatLabel","labelFormatter","replace","PointerPath","round","GaugeView","removeAll","colorList","posInfo","_renderMain","axisLineModel","lineStyleModel","angleRangeSpan","prevEndAngle","axisLineWidth","silent","getColor","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","splitLineModel","tickModel","subSplitNumber","splitLineLen","tickLen","step","subStep","splitLineStyle","tickLineStyle","unitX","unitY","Line","setTextStyle","tickLine","eachItemGraphicEl","valueExtent","angleExtent","pointerModel","titleModel","forceRich","detailModel","textWidth","textHeight","921","Path","buildPath","ctx","mathCos","mathSin","moveTo","lineTo"],"mappings":"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","file":"static/js/149.8bd10e550a617000dd3f.js","sourcesContent":["webpackJsonp([149],{\n\n/***/ 1004:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\n__webpack_require__(1011);\n\n__webpack_require__(1012);\n\nvar createDataSelectAction = __webpack_require__(1004);\n\nvar dataColor = __webpack_require__(1018);\n\nvar pieLayout = __webpack_require__(1014);\n\nvar dataFilter = __webpack_require__(1017);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar List = __webpack_require__(855);\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar _number = __webpack_require__(810);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = __webpack_require__(882);\n\nvar dataSelectableMixin = __webpack_require__(1015);\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar ChartView = __webpack_require__(869);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(844);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(1013);\n\nvar zrUtil = __webpack_require__(794);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar echarts = __webpack_require__(809);\n__webpack_require__(884);\n__webpack_require__(1010);\n__webpack_require__(913);\n__webpack_require__(918);\n__webpack_require__(881);\n__webpack_require__(914);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            isday: false,\n            isyear: false,\n            ismon: true,\n            groupnameData: [],\n            groupdateData: [],\n            groupqtyData: [],\n            wrapHeight: 250,\n            wrapWidth: 403\n        };\n    },\n    activated: function activated() {\n        this.init();\n    },\n    mounted: function mounted() {\n        this.init();\n    },\n\n    watch: {\n        '$store.state.JTweekTextIV': 'getweekText'\n    },\n    methods: {\n        init: function init() {\n            this.getweekText();\n            this.getDivHeight();\n        },\n        getDivHeight: function getDivHeight() {\n            this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\n            this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\n        },\n\n\n        //切换\n        getweekText: function getweekText() {\n            var _this = this;\n\n            var JTtext = 2;\n            JTtext = this.$store.state.JTweekTextIV;\n            if (JTtext === 3) {\n                this.isday = false;\n                this.ismon = false;\n                setTimeout(function () {\n                    _this.isyear = true;\n                });\n                this.getlist();\n            } else if (JTtext === 2) {\n                this.isyear = false;\n                this.isday = false;\n                setTimeout(function () {\n                    _this.ismon = true;\n                });\n                this.getlist();\n            }\n        },\n\n\n        //获取数据\n        getlist: function getlist() {\n            var _this2 = this;\n\n            var tempData = [];\n            var dataI = ['#f28c8c', '#f2bda5'];\n            var dataII = ['#f28c8c', '#f2bda5', '#739ba9'];\n            this.groupnameData = [];\n            this.groupdateData = [];\n            this.groupqtyData = [];\n            this.getAjax('/mktmfc/forms/getgroupcostmsg?datetype=' + this.$store.state.JTweekTextIV).then(function (result) {\n                if (result.status === 200) {\n                    tempData = result.data;\n                    for (var i = 0; i < tempData.length; i++) {\n                        if (_this2.$store.state.JTweekTextIV === 2) {\n                            _this2.groupnameData.push(tempData[i].sysname);\n                            _this2.groupdateData = _this2.returnWeek('year');\n                            _this2.groupqtyData.push({\n                                name: tempData[i].sysname,\n                                type: 'line',\n                                barWidth: '25%',\n                                itemStyle: {\n                                    normal: {\n                                        color: dataI[i]\n                                    }\n                                },\n                                lineStyle: {\n                                    normal: {\n                                        width: 3,\n                                        shadowColor: 'rgba(0,0,0,0.4)',\n                                        shadowBlur: 10,\n                                        shadowOffsetY: 10\n                                    }\n                                },\n                                data: _this2.returnReconstruction(tempData[i].condatelist, tempData[i].amountslist, _this2.returnWeek('year'))[1].map(function (item) {\n                                    return (item / 10000).toFixed(2);\n                                })\n                            });\n                        } else if (_this2.$store.state.JTweekTextIV === 3) {\n                            if (tempData[i].amountslist.length === 0) {\n                                tempData[i].amountslist = [0];\n                            }\n                            _this2.groupnameData.push(tempData[i].sysname);\n                            _this2.groupqtyData.push({\n                                value: (tempData[i].amountslist[0] / 10000).toFixed(2),\n                                name: tempData[i].sysname,\n                                itemStyle: { normal: { color: dataI[i] } }\n                            });\n                        }\n                    }\n                    // console.log(111,this.groupnameData)\n                    // console.log(222,this.groupqtyData)\n                    // console.log(333,this.groupdateData)\n                }\n            }).then(function () {\n                _this2.initEchart();\n                _this2.setEchart(_this2.groupnameData, _this2.groupdateData, _this2.groupqtyData);\n            });\n        },\n        initEchart: function initEchart() {\n            if (this.isyear) {\n                this.year_chart = echarts.init(this.$refs.year_chart);\n            } else if (this.ismon) {\n                this.mon_chart = echarts.init(this.$refs.mon_chart);\n            } else if (this.isday) {\n                //this.day_chart = echarts.init(this.$refs.day_chart);\n            }\n        },\n\n\n        //传参\n        setEchart: function setEchart(groupnameData, groupdateData, groupqtyData) {\n            //日\n            // if(this.day_chart){\n            //     this.day_chart.setOption({\n            //         tooltip : {\n            //             trigger: 'axis',\n            //             axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            //                 type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            //             }\n            //         },\n            //         legend: {\n            //             data:['搅拌站1','搅拌站2','搅拌站3'],\n            //             right: '7%',\n            //             //top:'5%'\n            //         },\n            //         grid: {\n            //             left: '12%',\n            //             width:'80%',\n            //             height:'60%',\n            //             bottom: '10%',\n            //             containLabel: true\n            //         },\n            //         xAxis : [\n            //             {\n            //                 type: 'category',\n            //                 // axisTick: {\n            //                 //     alignWithLabel: true\n            //                 // },\n            //                 data:['2-25','2-26','2-27','2-28','3-01','3-02','3-03','3-04','3-05','今天']\n            //             }\n            //         ],\n            //         yAxis : [\n            //             {\n            //                 type: 'value',\n            //                 // name: '',\n            //                 // axisTick: {\n            //                 //     alignWithLabel: true\n            //                 // }\n            //                 //boundaryGap: [0, '100%']\n            //             },\n            //         ],\n            //         series : [\n            //             {\n            //                 name:'搅拌站1',\n            //                 type:'bar',\n            //                 barWidth: '45%',\n            //                 stack: 'sum',\n            //                 itemStyle: {\n            //                     normal: {\n            //                         color: '#f28c8c'\n            //                     }\n            //                 },\n            //                 data:[100,500,900,200,400,800,700,600,520,666]\n            //             },\n            //             {\n            //                 name:'搅拌站2',\n            //                 type:'bar',\n            //                 barWidth: '45%',\n            //                 stack: 'sum',\n            //                 itemStyle: {\n            //                     normal: {\n            //                         color: '#f2bda5'\n            //                     }\n            //                 },\n            //                 data:[100,550,990,100,460,800,550,720,420,566]\n            //             },\n            //             {\n            //                 name:'搅拌站3',\n            //                 type:'bar',\n            //                 barWidth: '45%',\n            //                 stack: 'sum',\n            //                 itemStyle: {\n            //                     normal: {\n            //                         color: '#739ba9'\n            //                     }\n            //                 },\n            //                 data:[200,600,700,300,500,600,800,400,620,756]\n            //             },\n            //         ]\n            //     });\n            // }\n            //月\n            if (this.ismon) {\n                this.mon_chart.setOption({\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                        }\n                    },\n                    legend: {\n                        data: groupnameData,\n                        right: '7%'\n                    },\n                    grid: {\n                        left: '17%',\n                        width: '75%',\n                        height: '60%',\n                        bottom: '17%'\n                    },\n                    xAxis: [{\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n                    }],\n                    yAxis: [{\n                        type: 'value',\n                        name: '万元',\n                        axisTick: {\n                            alignWithLabel: true\n                            //boundaryGap: [0, '100%']\n                        } }],\n                    series: groupqtyData\n                    // series : [\n                    //     {\n                    //         name:'搅拌站1',\n                    //         type:'line',\n                    //         barWidth: '25%',\n                    //         itemStyle: {\n                    //             normal: {\n                    //                 color: '#f28c8c'\n                    //             }\n                    //         },\n                    //         data:[100,500,900,200,400,800,700,600,520,666]\n                    //     },\n                    //     {\n                    //         name:'搅拌站2',\n                    //         type:'line',\n                    //         barWidth: '25%',\n                    //         itemStyle: {\n                    //             normal: {\n                    //                 color: '#f2bda5'\n                    //             }\n                    //         },\n                    //         data:[100,550,990,100,460,800,550,720,420,566]\n                    //     },\n                    //     {\n                    //         name:'搅拌站3',\n                    //         type:'line',\n                    //         barWidth: '25%',\n                    //         itemStyle: {\n                    //             normal: {\n                    //                 color: '#739ba9'\n                    //             }\n                    //         },\n                    //         data:[200,600,700,300,500,600,800,400,620,756]\n                    //     },\n                    // ]\n                });\n            }\n            //年\n            if (this.isyear) {\n                this.year_chart.setOption({\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                    },\n                    legend: {\n                        icon: 'circle',\n                        left: '50%',\n                        //top: '5%',\n                        data: groupnameData\n                    },\n                    series: [{\n                        name: '区域销售分析',\n                        type: 'pie',\n                        radius: '65%',\n                        center: ['45%', '55%'],\n                        data: groupqtyData,\n\n                        // [\n                        //     {value:45384, name:'搅拌站1',itemStyle:{normal:{color: '#f28c8c'}}},\n                        //     {value:35144, name:'搅拌站2',itemStyle:{normal:{color: '#f2bda5'}}},\n                        //     {value:71376, name:'搅拌站3',itemStyle:{normal:{color: '#739ba9'}}},\n                        // ],\n                        label: {\n                            normal: {\n                                formatter: \"{c}万(元)\",\n                                position: 'inner'\n                            }\n                        },\n                        labelLine: {\n                            normal: {\n                                lineStyle: {\n                                    // color: 'rgba(255, 255, 255, 0.3)'\n                                }\n                            }\n                        },\n                        itemStyle: {\n                            normal: {\n                                // color: '#f6bfbc',\n                                shadowBlur: 10,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            },\n                            emphasis: {\n                                shadowBlur: 15,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        }\n                    }]\n                });\n            }\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 1341:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(656)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".wrap-div[data-v-5dcdb228]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"jituan_cbxx.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-5dcdb228] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-5dcdb228] {\\n  /*width: 560px;*/\\n  /*height: 320px;*/\\n}\\n.mon-chart[data-v-5dcdb228] {\\n  /*width: 560px;*/\\n  /*height: 320px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1472:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1341);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(657)(\"4876857c\", content, true, {});\n\n/***/ }),\n\n/***/ 1531:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(1472)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(1160),\n  /* template */\n  __webpack_require__(1669),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-5dcdb228\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1669:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [(_vm.ismon) ? _c('div', {\n    ref: \"mon_chart\",\n    staticClass: \"mon-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e(), _vm._v(\" \"), (_vm.isyear) ? _c('div', {\n    ref: \"year_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e()])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 918:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(919);\n\n__webpack_require__(920);\n\n/***/ }),\n\n/***/ 919:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar List = __webpack_require__(855);\n\nvar SeriesModel = __webpack_require__(868);\n\nvar zrUtil = __webpack_require__(794);\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 920:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PointerPath = __webpack_require__(921);\n\nvar graphic = __webpack_require__(808);\n\nvar ChartView = __webpack_require__(869);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 921:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/149.8bd10e550a617000dd3f.js","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 1004\n// module chunks = 146 147 148 149 150 151 152","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 1010\n// module chunks = 146 147 148 149 150 151 152","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 1011\n// module chunks = 146 147 148 149 150 151 152","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 1012\n// module chunks = 146 147 148 149 150 151 152","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 1013\n// module chunks = 146 147 148 149 150 151 152","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 1014\n// module chunks = 146 147 148 149 150 151 152","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 1015\n// module chunks = 146 147 148 149 150 151 152","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 1017\n// module chunks = 146 147 148 149 150 151 152","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 1018\n// module chunks = 146 147 148 149 150 151 152","<template>\r\n    <!-- 集团成本信息 -->\r\n    <div class=\"wrap-div\" ref=\"wrapHeight\">\r\n        <!-- <div v-if=\"isday\" ref=\"day_chart\" class=\"bar-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div> -->\r\n        <div v-if=\"ismon\" ref=\"mon_chart\" class=\"mon-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div>\r\n        <div v-if=\"isyear\" ref=\"year_chart\" class=\"bar-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\n    const echarts = require('echarts/lib/echarts');\r\n    require('echarts/lib/chart/bar');\r\n    require('echarts/lib/chart/pie');\r\n    require('echarts/lib/chart/line');\r\n    require('echarts/lib/chart/gauge');\r\n    require('echarts/lib/component/tooltip');\r\n    require('echarts/lib/component/legend');\r\n    export default {\r\n        data() {\r\n            return {\r\n                isday:false,\r\n                isyear:false,\r\n                ismon:true,\r\n                groupnameData :[],\r\n                groupdateData :[],\r\n                groupqtyData : [],\r\n                wrapHeight: 250,\r\n                wrapWidth: 403,\r\n            }\r\n        },\r\n        activated(){\r\n            this.init();\r\n        },\r\n        mounted() {\r\n            this.init();\r\n        },\r\n        watch:{\r\n            '$store.state.JTweekTextIV':'getweekText'\r\n        },\r\n        methods: {\r\n            init(){\r\n                this.getweekText();\r\n                this.getDivHeight();\r\n            },\r\n            getDivHeight(){\r\n                this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\r\n                this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\r\n            },\r\n\r\n            //切换\r\n            getweekText(){\r\n                let JTtext = 2;\r\n                    JTtext = this.$store.state.JTweekTextIV;\r\n                if(JTtext === 3){\r\n                    this.isday = false;\r\n                    this.ismon = false\r\n                    setTimeout(()=>{\r\n                        this.isyear = true;\r\n                    })\r\n                    this.getlist();\r\n                }else if(JTtext === 2){\r\n                    this.isyear = false;\r\n                    this.isday = false;\r\n                    setTimeout(()=>{\r\n                        this.ismon = true;\r\n                    })\r\n                    this.getlist();\r\n                }\r\n                \r\n            },\r\n            \r\n            //获取数据\r\n            getlist(){\r\n                let tempData = [];\r\n                let dataI = ['#f28c8c','#f2bda5'];\r\n                let dataII = ['#f28c8c','#f2bda5','#739ba9'];\r\n                this.groupnameData = [];\r\n                this.groupdateData = [];\r\n                this.groupqtyData = [];\r\n                this.getAjax('/mktmfc/forms/getgroupcostmsg?datetype='+this.$store.state.JTweekTextIV)\r\n                .then((result)=>{\r\n                    if(result.status === 200){\r\n                        tempData = result.data;\r\n                        for(let i=0; i<tempData.length; i++){\r\n                            if(this.$store.state.JTweekTextIV === 2){\r\n                                this.groupnameData.push(tempData[i].sysname)\r\n                                this.groupdateData = this.returnWeek('year');\r\n                                this.groupqtyData.push({\r\n                                        name:tempData[i].sysname,\r\n                                        type:'line',\r\n                                        barWidth: '25%',\r\n                                        itemStyle: {\r\n                                            normal: {\r\n                                                color: dataI[i]\r\n                                            }\r\n                                        },\r\n                                        lineStyle: {\r\n                                            normal: {\r\n                                                width: 3,\r\n                                                shadowColor: 'rgba(0,0,0,0.4)',\r\n                                                shadowBlur: 10,\r\n                                                shadowOffsetY: 10\r\n                                            }\r\n                                        },\r\n                                        data:this.returnReconstruction(tempData[i].condatelist,tempData[i].amountslist,this.returnWeek('year'))[1].map(item => {\r\n                                            return (item/10000).toFixed(2)\r\n                                        })\r\n                                    })\r\n                            }else if(this.$store.state.JTweekTextIV === 3){\r\n                                if(tempData[i].amountslist.length === 0){\r\n                                    tempData[i].amountslist = [0];\r\n                                }\r\n                                this.groupnameData.push(tempData[i].sysname)\r\n                                this.groupqtyData.push({\r\n                                        value:(tempData[i].amountslist[0]/10000).toFixed(2),\r\n                                        name:tempData[i].sysname,\r\n                                        itemStyle:{normal:{color: dataI[i]}},\r\n                                    })\r\n                            }\r\n                            \r\n                        }\r\n                        // console.log(111,this.groupnameData)\r\n                        // console.log(222,this.groupqtyData)\r\n                        // console.log(333,this.groupdateData)\r\n                    }\r\n                })\r\n                .then(()=>{\r\n                    this.initEchart();\r\n                    this.setEchart(this.groupnameData,this.groupdateData,this.groupqtyData);\r\n                })\r\n            },\r\n\r\n            initEchart(){\r\n                if(this.isyear){\r\n                    this.year_chart = echarts.init(this.$refs.year_chart);\r\n                }else if(this.ismon){\r\n                    this.mon_chart = echarts.init(this.$refs.mon_chart);\r\n                }else if(this.isday){\r\n                    //this.day_chart = echarts.init(this.$refs.day_chart);\r\n                }\r\n            },\r\n\r\n                        //传参\r\n            setEchart(groupnameData,groupdateData,groupqtyData) {\r\n                //日\r\n                // if(this.day_chart){\r\n                //     this.day_chart.setOption({\r\n                //         tooltip : {\r\n                //             trigger: 'axis',\r\n                //             axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                //                 type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                //             }\r\n                //         },\r\n                //         legend: {\r\n                //             data:['搅拌站1','搅拌站2','搅拌站3'],\r\n                //             right: '7%',\r\n                //             //top:'5%'\r\n                //         },\r\n                //         grid: {\r\n                //             left: '12%',\r\n                //             width:'80%',\r\n                //             height:'60%',\r\n                //             bottom: '10%',\r\n                //             containLabel: true\r\n                //         },\r\n                //         xAxis : [\r\n                //             {\r\n                //                 type: 'category',\r\n                //                 // axisTick: {\r\n                //                 //     alignWithLabel: true\r\n                //                 // },\r\n                //                 data:['2-25','2-26','2-27','2-28','3-01','3-02','3-03','3-04','3-05','今天']\r\n                //             }\r\n                //         ],\r\n                //         yAxis : [\r\n                //             {\r\n                //                 type: 'value',\r\n                //                 // name: '',\r\n                //                 // axisTick: {\r\n                //                 //     alignWithLabel: true\r\n                //                 // }\r\n                //                 //boundaryGap: [0, '100%']\r\n                //             },\r\n                //         ],\r\n                //         series : [\r\n                //             {\r\n                //                 name:'搅拌站1',\r\n                //                 type:'bar',\r\n                //                 barWidth: '45%',\r\n                //                 stack: 'sum',\r\n                //                 itemStyle: {\r\n                //                     normal: {\r\n                //                         color: '#f28c8c'\r\n                //                     }\r\n                //                 },\r\n                //                 data:[100,500,900,200,400,800,700,600,520,666]\r\n                //             },\r\n                //             {\r\n                //                 name:'搅拌站2',\r\n                //                 type:'bar',\r\n                //                 barWidth: '45%',\r\n                //                 stack: 'sum',\r\n                //                 itemStyle: {\r\n                //                     normal: {\r\n                //                         color: '#f2bda5'\r\n                //                     }\r\n                //                 },\r\n                //                 data:[100,550,990,100,460,800,550,720,420,566]\r\n                //             },\r\n                //             {\r\n                //                 name:'搅拌站3',\r\n                //                 type:'bar',\r\n                //                 barWidth: '45%',\r\n                //                 stack: 'sum',\r\n                //                 itemStyle: {\r\n                //                     normal: {\r\n                //                         color: '#739ba9'\r\n                //                     }\r\n                //                 },\r\n                //                 data:[200,600,700,300,500,600,800,400,620,756]\r\n                //             },\r\n                //         ]\r\n                //     });\r\n                // }\r\n                //月\r\n                if(this.ismon){\r\n                    this.mon_chart.setOption({\r\n                        tooltip : {\r\n                            trigger: 'axis',\r\n                            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            data:groupnameData,\r\n                            right: '7%',\r\n                        },\r\n                        grid: {\r\n                            left: '17%',\r\n                            width:'75%',\r\n                            height:'60%',\r\n                            bottom: '17%'\r\n                        },\r\n                        xAxis : [\r\n                            {\r\n                                type: 'category',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                },\r\n                                data:['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月']\r\n                            }\r\n                        ],\r\n                        yAxis : [\r\n                            {\r\n                                type: 'value',\r\n                                name: '万元',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                }\r\n                                //boundaryGap: [0, '100%']\r\n                            },\r\n                        ],\r\n                        series : groupqtyData\r\n                        // series : [\r\n                        //     {\r\n                        //         name:'搅拌站1',\r\n                        //         type:'line',\r\n                        //         barWidth: '25%',\r\n                        //         itemStyle: {\r\n                        //             normal: {\r\n                        //                 color: '#f28c8c'\r\n                        //             }\r\n                        //         },\r\n                        //         data:[100,500,900,200,400,800,700,600,520,666]\r\n                        //     },\r\n                        //     {\r\n                        //         name:'搅拌站2',\r\n                        //         type:'line',\r\n                        //         barWidth: '25%',\r\n                        //         itemStyle: {\r\n                        //             normal: {\r\n                        //                 color: '#f2bda5'\r\n                        //             }\r\n                        //         },\r\n                        //         data:[100,550,990,100,460,800,550,720,420,566]\r\n                        //     },\r\n                        //     {\r\n                        //         name:'搅拌站3',\r\n                        //         type:'line',\r\n                        //         barWidth: '25%',\r\n                        //         itemStyle: {\r\n                        //             normal: {\r\n                        //                 color: '#739ba9'\r\n                        //             }\r\n                        //         },\r\n                        //         data:[200,600,700,300,500,600,800,400,620,756]\r\n                        //     },\r\n                        // ]\r\n                    })\r\n                }\r\n                //年\r\n                if(this.isyear){\r\n                    this.year_chart.setOption({\r\n                        tooltip : {\r\n                            trigger: 'item',\r\n                            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n                        },\r\n                        legend: {\r\n                            icon: 'circle',\r\n                            left: '50%',\r\n                            //top: '5%',\r\n                            data: groupnameData\r\n                        },\r\n                        series : [\r\n                            {\r\n                                name: '区域销售分析',\r\n                                type: 'pie',\r\n                                radius : '65%',\r\n                                center: ['45%', '55%'],\r\n                                data:groupqtyData,\r\n                                \r\n                                    // [\r\n                                    //     {value:45384, name:'搅拌站1',itemStyle:{normal:{color: '#f28c8c'}}},\r\n                                    //     {value:35144, name:'搅拌站2',itemStyle:{normal:{color: '#f2bda5'}}},\r\n                                    //     {value:71376, name:'搅拌站3',itemStyle:{normal:{color: '#739ba9'}}},\r\n                                    // ],\r\n                                label: {\r\n                                    normal: {\r\n                                        formatter: \"{c}万(元)\",\r\n                                        position: 'inner'\r\n                                    }\r\n                                },\r\n                                labelLine: {\r\n                                    normal: {\r\n                                        lineStyle: {\r\n                                            // color: 'rgba(255, 255, 255, 0.3)'\r\n                                        }\r\n                                    }\r\n                                },\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        // color: '#f6bfbc',\r\n                                        shadowBlur: 10,\r\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                    },\r\n                                    emphasis: {\r\n                                        shadowBlur: 15,\r\n                                        shadowOffsetX: 0,\r\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\" scoped type=\"text/less\">\r\n    .wrap-div{\r\n        height: 100%;\r\n    }\r\n    .bar-chart {\r\n        /*width: 560px;*/\r\n        /*height: 320px;*/\r\n    }\r\n    .mon-chart{\r\n        /*width: 560px;*/\r\n        /*height: 320px;*/\r\n    }\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// jituan_cbxx.vue?27282e72","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".wrap-div[data-v-5dcdb228]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"jituan_cbxx.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-5dcdb228] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-5dcdb228] {\\n  /*width: 560px;*/\\n  /*height: 320px;*/\\n}\\n.mon-chart[data-v-5dcdb228] {\\n  /*width: 560px;*/\\n  /*height: 320px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5dcdb228\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\n// module id = 1341\n// module chunks = 149","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5dcdb228\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./jituan_cbxx.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4876857c\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5dcdb228\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\n// module id = 1472\n// module chunks = 149","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5dcdb228\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./jituan_cbxx.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./jituan_cbxx.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5dcdb228\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./jituan_cbxx.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-5dcdb228\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\n// module id = 1531\n// module chunks = 149","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [(_vm.ismon) ? _c('div', {\n    ref: \"mon_chart\",\n    staticClass: \"mon-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e(), _vm._v(\" \"), (_vm.isyear) ? _c('div', {\n    ref: \"year_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e()])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5dcdb228\",\"hasScoped\":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/page/erp_pc/erp_ph/ph_block/jituan_cbxx.vue\n// module id = 1669\n// module chunks = 149","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge.js\n// module id = 918\n// module chunks = 141 146 147 148 149 153 154 155 156","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = 919\n// module chunks = 141 146 147 148 149 153 154 155 156","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeView.js\n// module id = 920\n// module chunks = 141 146 147 148 149 153 154 155 156","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/PointerPath.js\n// module id = 921\n// module chunks = 141 146 147 148 149 153 154 155 156"],"sourceRoot":""}