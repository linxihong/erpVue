{"version":3,"sources":["webpack:///static/js/156.e74c810bd62db451bbbf.js","webpack:///jiaobanzhanzhang_cdxx.vue","webpack:///./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue?3518","webpack:///./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue?3bf3","webpack:///./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue","webpack:///./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue?38d6","webpack:///./~/echarts/lib/chart/gauge.js?b479*******","webpack:///./~/echarts/lib/chart/gauge/GaugeSeries.js?6baa*******","webpack:///./~/echarts/lib/chart/gauge/GaugeView.js?2620*******","webpack:///./~/echarts/lib/chart/gauge/PointerPath.js?3d92*******"],"names":["webpackJsonp","1151","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","echarts","data","isday","isyear","dayData","consumeqtyData","transportqtyData","singleData","consumptionYear","qtyYear","qtyAverage","wrapHeight","wrapWidth","qtyHeight","yhHeight","activated","this","init","mounted","getDivHeight","watch","$store.state.weekTextV","methods","getweekText","$refs","offsetHeight","offsetWidth","_this","$store","state","weekTextV","setTimeout","getlist","_this2","tempData","dataI","dataII","dataIII","getAjax","then","result","status","length","returnWeek","i","push","consumedate","consumeqty","transportqty","returnReconstruction","map","item","toFixed","_i","$message","message","returnIntercept","type","initEchart","setEchart","cl_chart","qty_chart","yh_chart","setOption","tooltip","formatter","toolbox","feature","restore","saveAsImage","series","name","center","radius","splitNumber","min","max","startAngle","endAngle","splitLine","alignWithLabel","textStyle","fontSize","axisTick","axisLine","lineStyle","color","axisLabel","e","title","show","offsetCenter","detail","trigger","axisPointer","legend","grid","left","width","height","bottom","xAxis","yAxis","barWidth","itemStyle","normal","shadowColor","shadowBlur","yAxisIndex","shadowOffsetY","1382","exports","version","sources","names","mappings","file","sourcesContent","sourceRoot","1513","content","locals","1523","injectStyle","ssrContext","Component","1729","render","_vm","_h","$createElement","_c","_self","ref","staticClass","style","_m","_v","_e","staticRenderFns","918","919","List","SeriesModel","zrUtil","GaugeSeries","extend","getInitialData","option","ecModel","list","dataOpt","isArray","initData","defaultOption","zlevel","z","legendHoverLink","clockwise","distance","pointer","backgroundColor","borderWidth","borderColor","padding","_default","920","parsePosition","seriesModel","api","get","getWidth","getHeight","size","Math","cx","parsePercent","cy","r","formatLabel","label","labelFormatter","replace","PointerPath","graphic","ChartView","_number","round","linearMap","PI2","PI","GaugeView","group","removeAll","colorList","posInfo","_renderMain","dispose","axisLineModel","getModel","lineStyleModel","angleRangeSpan","prevEndAngle","axisLineWidth","percent","sector","Sector","shape","r0","silent","setStyle","fill","getLineStyle","add","getColor","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","splitLineModel","tickModel","labelModel","subSplitNumber","splitLineLen","tickLen","angle","step","subStep","splitLineStyle","tickLineStyle","unitX","cos","unitY","sin","Line","x1","y1","x2","y2","stroke","autoColor","Text","setTextStyle","text","x","y","textVerticalAlign","textAlign","j","tickLine","oldData","_data","eachItemGraphicEl","el","remove","valueExtent","angleExtent","getData","diff","idx","initProps","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","updateProps","execute","itemModel","getItemModel","pointerModel","setShape","useStyle","getItemStyle","setHoverStyle","titleModel","getName","forceRich","detailModel","textWidth","isNaN","textHeight","921","Path","buildPath","ctx","mathCos","mathSin","moveTo","lineTo"],"mappings":"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","file":"static/js/156.e74c810bd62db451bbbf.js","sourcesContent":["webpackJsonp([156],{\n\n/***/ 1151:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar echarts = __webpack_require__(809);\n__webpack_require__(884);\n__webpack_require__(913);\n__webpack_require__(918);\n__webpack_require__(881);\n__webpack_require__(914);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            isday: true,\n            isyear: false,\n            dayData: [],\n            consumeqtyData: [],\n            transportqtyData: [],\n            singleData: [],\n            consumptionYear: 0,\n            qtyYear: 0,\n            qtyAverage: 0,\n            wrapHeight: 210,\n            wrapWidth: 329,\n            qtyHeight: 140,\n            yhHeight: 140\n        };\n    },\n    activated: function activated() {\n        this.init();\n    },\n    mounted: function mounted() {\n        this.init();\n        this.getDivHeight();\n    },\n\n    watch: {\n        '$store.state.weekTextV': 'getweekText'\n    },\n    methods: {\n        init: function init() {\n            this.getweekText();\n        },\n        getDivHeight: function getDivHeight() {\n            this.wrapHeight = this.$refs.wrapHeight.offsetHeight + 10;\n            this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\n            this.qtyHeight = this.wrapHeight / 2;\n            this.yhHeight = this.wrapHeight / 2;\n        },\n\n\n        //切换\n        getweekText: function getweekText() {\n            var _this = this;\n\n            if (this.$store.state.weekTextV === 3) {\n                this.isday = false;\n                setTimeout(function () {\n                    _this.isyear = true;\n                });\n            } else {\n                this.isyear = false;\n                setTimeout(function () {\n                    _this.isday = true;\n                });\n            }\n            this.getlist();\n        },\n\n\n        //获取数据\n        getlist: function getlist() {\n            var _this2 = this;\n\n            var tempData = [];\n            this.dayData = [];\n            this.singleData = [];\n            this.consumeqtyData = [];\n            this.transportqtyData = [];\n            var dataI = [];\n            var dataII = [];\n            var dataIII = [];\n            this.getAjax('/mktmfc/forms/getcarlistmsg?datetype=' + this.$store.state.weekTextV).then(function (result) {\n                if (result.status === 200) {\n                    tempData = result.data;\n                    if (tempData.length === 0) {\n                        if (_this2.$store.state.weekTextV === 2) {\n                            _this2.dayData = _this2.returnWeek('year');\n                            _this2.consumeqtyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                            _this2.transportqtyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                            _this2.singleData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                        } else {\n                            _this2.dayData = _this2.returnWeek('TendaysNoyear');\n                            _this2.consumeqtyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                            _this2.transportqtyData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                            _this2.singleData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                        }\n                    } else {\n                        for (var i = 0; i < tempData.length; i++) {\n                            dataI.push(tempData[i].consumedate);\n                            dataII.push(tempData[i].consumeqty);\n                            dataIII.push(tempData[i].transportqty);\n                        }\n                        if (_this2.$store.state.weekTextV === 2) {\n                            _this2.dayData = _this2.returnWeek('yearText');\n                            _this2.consumeqtyData = _this2.returnReconstruction(dataI, dataII, _this2.returnWeek('year'))[1];\n                            _this2.transportqtyData = _this2.returnReconstruction(dataI, dataIII, _this2.returnWeek('year'))[1].map(function (item) {\n                                return (item / 10000).toFixed(2);\n                            });\n                        } else {\n                            _this2.dayData = _this2.returnWeek('TendaysNoyear');\n                            _this2.consumeqtyData = _this2.returnReconstruction(dataI, dataII, _this2.returnWeek('Tendays'))[1];\n                            _this2.transportqtyData = _this2.returnReconstruction(dataI, dataIII, _this2.returnWeek('Tendays'))[1].map(function (item) {\n                                return (item / 10000).toFixed(2);\n                            });\n                        }\n\n                        //单方油耗\n                        for (var _i = 0; _i < _this2.consumeqtyData.length; _i++) {\n                            if (_this2.transportqtyData[_i] === 0) {\n                                _this2.singleData.push(_this2.transportqtyData[_i]);\n                            } else {\n                                _this2.singleData.push((_this2.consumeqtyData[_i] / _this2.transportqtyData[_i]).toFixed(2));\n                            }\n                        }\n\n                        _this2.consumptionYear = tempData[0].consumeqty;\n                        _this2.qtyYear = tempData[0].transportqty;\n                        if (_this2.qtyYear === 0 || _this2.qtyYear === 0) {\n                            _this2.qtyAverage = 0;\n                        } else {\n                            _this2.qtyAverage = (tempData[0].consumeqty / tempData[0].transportqty).toFixed(2);\n                        }\n                    }\n                } else {\n                    _this2.$message({\n                        message: _this2.returnIntercept(result),\n                        type: 'error'\n                    });\n                }\n            }).then(function () {\n                _this2.initEchart();\n                _this2.setEchart(_this2.dayData, _this2.transportqtyData, _this2.consumeqtyData, _this2.singleData, _this2.qtyYear, _this2.consumptionYear, _this2.qtyAverage);\n            });\n        },\n        initEchart: function initEchart() {\n            if (this.isyear) {\n                this.cl_chart = echarts.init(this.$refs.cl_chart);\n            } else {\n                this.qty_chart = echarts.init(this.$refs.qty_chart);\n                this.yh_chart = echarts.init(this.$refs.yh_chart);\n            }\n        },\n\n\n        //传参\n        setEchart: function setEchart(dayData, transportqtyData, consumeqtyData, singleData, qtyYear, consumptionYear, qtyAverage) {\n            //bar\n            if (!this.isyear) {\n                this.qty_chart.setOption({\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                        }\n                    },\n                    legend: {\n                        data: ['方量', '油量']\n                    },\n                    grid: {\n                        left: '18%',\n                        width: '68%',\n                        height: '50%',\n                        bottom: '28%'\n                    },\n                    xAxis: [{\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        data: dayData\n                    }],\n                    yAxis: [{\n                        type: 'value',\n                        name: '万(方)',\n                        axisTick: {\n                            alignWithLabel: true\n                        }\n                    }, {\n                        type: 'value',\n                        name: '',\n                        //interval: 200,\n                        axisLabel: {\n                            alignWithLabel: true\n                        }\n                    }],\n                    series: [{\n                        name: '方量',\n                        type: 'bar',\n                        barWidth: '30%',\n                        itemStyle: {\n                            normal: {\n                                color: '#37a2da',\n                                shadowColor: 'rgba(0, 0, 0, 0.5)',\n                                shadowBlur: 10\n                            }\n                        },\n                        data: transportqtyData\n                    }, {\n                        name: '油量',\n                        type: 'line',\n                        yAxisIndex: 1,\n                        //barWidth: '30%',\n                        itemStyle: {\n                            normal: {\n                                color: '#ff9f7f'\n                            }\n                        },\n                        lineStyle: {\n                            normal: {\n                                width: 3,\n                                shadowColor: 'rgba(0,0,0,0.4)',\n                                shadowBlur: 10,\n                                shadowOffsetY: 10\n                            }\n                        },\n                        data: consumeqtyData\n                    }]\n                });\n\n                this.yh_chart.setOption({\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                        }\n                    },\n                    grid: {\n                        left: '14%',\n                        width: '70%',\n                        height: '50%',\n                        bottom: '40%'\n                    },\n                    xAxis: [{\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        data: dayData\n                    }],\n                    yAxis: [{\n                        type: 'value',\n                        name: '',\n                        axisTick: {\n                            alignWithLabel: true\n                        }\n                    }],\n                    series: [{\n                        name: '日',\n                        type: 'line',\n                        barWidth: '30%',\n                        itemStyle: {\n                            normal: {\n                                color: '#ff9f7f'\n                            }\n                        },\n                        lineStyle: {\n                            normal: {\n                                width: 3,\n                                shadowColor: 'rgba(0,0,0,0.4)',\n                                shadowBlur: 10,\n                                shadowOffsetY: 10\n                            }\n                        },\n                        data: singleData\n                    }]\n                });\n            } else {\n                this.cl_chart.setOption({\n                    tooltip: {\n                        formatter: \"{a} <br/>{b} : {c}%\"\n                    },\n                    toolbox: {\n                        feature: {\n                            restore: {},\n                            saveAsImage: {}\n                        }\n                    },\n                    series: [{\n                        name: '送货方量',\n                        center: ['25%', '32%'],\n                        radius: '60%', //半径\n                        type: 'gauge',\n                        splitNumber: 5,\n                        min: 0, //刻度的最小值\n                        max: 1000000, //刻度的最大值\n                        //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\n                        startAngle: 190,\n                        //结束角度。\n                        endAngle: -10,\n                        //分隔线样式。\n                        splitLine: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        //刻度样式。\n                        axisTick: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        axisLine: { // 坐标轴线  \n                            lineStyle: {\n                                //width: 30,      // 属性lineStyle控制线条样式  \n                                color: [[0.2, '#fb7293'], [0.8, '#ff9f7f'], [1, '#e7bcf3']]\n                            }\n                        },\n                        //刻度标签。\n                        axisLabel: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            },\n                            formatter: function formatter(e) {\n                                switch (e + '') {\n                                    case \"0\":\n                                        return \"0\";\n                                    case \"100000\":\n                                        return \"100000\";\n                                    case \"200000\":\n                                        return \"200000\";\n                                    // case \"400000\":\n                                    // return \"400000\";\n                                    // case \"600000\":\n                                    // return \"600000\";\n                                    case \"800000\":\n                                        return \"800000\";\n                                    case \"1000000\":\n                                        return \"1000000\";\n                                }\n                            }\n                        },\n                        title: {\n                            show: true,\n                            offsetCenter: [0, '-40%'], // x, y，单位px\n                            textStyle: {\n                                color: '#hhh',\n                                fontSize: 20\n                            }\n                        },\n                        detail: {\n                            show: true,\n                            offsetCenter: [0, '50%'],\n                            formatter: '送货方量:{value}',\n                            textStyle: {\n                                fontSize: 15\n                            }\n                        },\n                        data: [{ value: qtyYear }]\n                    }, {\n                        name: '总耗油',\n                        center: ['76%', '32%'],\n                        radius: '60%',\n                        type: 'gauge',\n                        min: 0, //刻度的最小值\n                        max: 10000, //刻度的最大值\n                        splitNumber: 5,\n                        //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\n                        startAngle: 190,\n                        //结束角度。\n                        endAngle: -10,\n                        //分隔线样式。\n                        splitLine: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        //刻度样式。\n                        axisTick: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        axisLine: { // 坐标轴线  \n                            lineStyle: {\n                                //width: 30,      // 属性lineStyle控制线条样式  \n                                color: [[0.2, '#32c5e9'], [0.8, '#37a2da'], [1, '#9fe6b8']]\n                            }\n                        },\n                        //刻度标签。\n                        axisLabel: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                            // formatter:function(e){\n                            //     switch(e+''){\n                            //         case \"0\":\n                            //         return \"0\";\n                            //         case \"10\":\n                            //         return \"1000\";\n                            //         case \"50\":\n                            //         return \"5000\";\n                            //         case \"100\":\n                            //         return \"50000\";\n                            //     }\n                            // },\n                        },\n                        title: {\n                            show: true,\n                            offsetCenter: [0, '-40%'], // x, y，单位px\n                            textStyle: {\n                                color: '#hhh',\n                                fontSize: 20\n                            }\n                        },\n                        detail: {\n                            show: true,\n                            offsetCenter: [0, '50%'],\n                            formatter: '总耗油:{value}',\n                            textStyle: {\n                                fontSize: 15\n                            }\n                        },\n                        data: [{ value: consumptionYear }]\n                    }, {\n                        name: '单方耗油量',\n                        center: ['50%', '77%'],\n                        radius: '52%',\n                        type: 'gauge',\n                        splitNumber: 5,\n                        min: 0, //刻度的最小值\n                        max: 1, //刻度的最大值\n                        //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\n                        startAngle: 190,\n                        //结束角度。\n                        endAngle: -10,\n                        //分隔线样式。\n                        splitLine: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        //刻度样式。\n                        axisTick: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                        },\n                        //刻度标签。\n                        axisLabel: {\n                            alignWithLabel: true,\n                            textStyle: {\n                                fontSize: 10\n                            }\n                            // formatter:function(e){\n                            //     switch(e+''){\n                            //         case \"0\":\n                            //         return \"0\";\n                            //         case \"10\":\n                            //         return \"0.01\";\n                            //         case \"50\":\n                            //         return \"0.1\";\n                            //         case \"100\":\n                            //         return \"1\";\n                            //     }\n                            // },\n\n                        },\n                        title: {\n                            show: true,\n                            offsetCenter: [0, '-40%'], // x, y，单位px\n                            textStyle: {\n                                color: '#hhh',\n                                fontSize: 15\n                            }\n                        },\n                        detail: {\n                            show: true,\n                            offsetCenter: [0, '45%'],\n                            formatter: '平均油耗:{value}',\n                            textStyle: {\n                                fontSize: 15\n                            }\n                        },\n                        data: [{ value: qtyAverage }]\n                    }]\n                });\n            }\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 1382:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(656)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".heigth-div[data-v-ca681f30]{height:100%}.self-table td[data-v-ca681f30],.self-table th[data-v-ca681f30]{font-weight:400;border:0 solid #fff}.el-table td[data-v-ca681f30],.el-table th[data-v-ca681f30]{background-color:#fff;height:35px}.point-div[data-v-ca681f30]{display:flex;flex-direction:column;justify-content:space-between}.point-div p[data-v-ca681f30]{margin:0 5px}.point-div .qty-div[data-v-ca681f30]{display:flex;position:relative}.point-div .qty-div .barI[data-v-ca681f30]{position:absolute;width:20px;margin-top:15px}.point-div .qty-div .bar-chart[data-v-ca681f30]{margin:0 auto}@media screen and (max-width:1500px){.point-div .qty-div .bar-chart[data-v-ca681f30]{padding:0 15px}}.point-div .qty-div .barII[data-v-ca681f30]{position:absolute;right:5px;width:20px;margin-top:15px}.point-div .yh-div[data-v-ca681f30]{display:flex}.point-div .yh-div .barIII[data-v-ca681f30]{width:20px;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\"],\"names\":[],\"mappings\":\"AACA,6BACE,WAAa,CACd,AACD,gEAEE,gBAAoB,AACpB,mBAAuB,CACxB,AACD,4DAEE,sBAAuB,AACvB,WAAa,CACd,AACD,4BACE,aAAc,AACd,sBAAuB,AACvB,6BAA+B,CAChC,AACD,8BACE,YAAc,CACf,AACD,qCACE,aAAc,AACd,iBAAmB,CACpB,AACD,2CACE,kBAAmB,AACnB,WAAY,AACZ,eAAiB,CAClB,AACD,gDACE,aAAe,CAChB,AACD,qCACA,gDACI,cAAgB,CACnB,CACA,AACD,4CACE,kBAAmB,AACnB,UAAW,AACX,WAAY,AACZ,eAAiB,CAClB,AACD,oCACE,YAAc,CACf,AACD,4CACE,WAAY,AACZ,eAAiB,CAClB\",\"file\":\"jiaobanzhanzhang_cdxx.vue\",\"sourcesContent\":[\"\\n.heigth-div[data-v-ca681f30] {\\n  height: 100%;\\n}\\n.self-table th[data-v-ca681f30],\\n.self-table td[data-v-ca681f30] {\\n  font-weight: normal;\\n  border: 0px solid #fff;\\n}\\n.el-table td[data-v-ca681f30],\\n.el-table th[data-v-ca681f30] {\\n  background-color: #fff;\\n  height: 35px;\\n}\\n.point-div[data-v-ca681f30] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n.point-div p[data-v-ca681f30] {\\n  margin: 0 5px;\\n}\\n.point-div .qty-div[data-v-ca681f30] {\\n  display: flex;\\n  position: relative;\\n}\\n.point-div .qty-div .barI[data-v-ca681f30] {\\n  position: absolute;\\n  width: 20px;\\n  margin-top: 15px;\\n}\\n.point-div .qty-div .bar-chart[data-v-ca681f30] {\\n  margin: 0 auto;\\n}\\n@media screen and (max-width: 1500px) {\\n.point-div .qty-div .bar-chart[data-v-ca681f30] {\\n    padding: 0 15px;\\n}\\n}\\n.point-div .qty-div .barII[data-v-ca681f30] {\\n  position: absolute;\\n  right: 5px;\\n  width: 20px;\\n  margin-top: 15px;\\n}\\n.point-div .yh-div[data-v-ca681f30] {\\n  display: flex;\\n}\\n.point-div .yh-div .barIII[data-v-ca681f30] {\\n  width: 20px;\\n  margin-top: 10px;\\n}\\n.point-div .bar-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 150px;*/\\n}\\n.point-div .yh-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 150px;*/\\n}\\n.cl-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 274px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1513:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1382);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(657)(\"669b2794\", content, true, {});\n\n/***/ }),\n\n/***/ 1523:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(1513)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(1151),\n  /* template */\n  __webpack_require__(1729),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-ca681f30\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1729:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"heigth-div scrollBar\"\n  }, [_c('div', {\n    staticClass: \"point-div\"\n  }, [(_vm.isday) ? _c('div', {\n    staticClass: \"qty-div\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.qtyHeight + 'px'\n    })\n  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n    ref: \"qty_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px'\n    })\n  }), _vm._v(\" \"), _vm._m(1)]) : _vm._e(), _vm._v(\" \"), (_vm.isday) ? _c('div', {\n    staticClass: \"yh-div\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.yhHeight + 'px'\n    })\n  }, [_vm._m(2), _vm._v(\" \"), _c('div', {\n    ref: \"yh_chart\",\n    staticClass: \"yh-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px'\n    })\n  })]) : _vm._e()]), _vm._v(\" \"), (_vm.isyear) ? _c('div', {\n    ref: \"cl_chart\",\n    staticClass: \"cl-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barI\"\n  }, [_c('p', [_vm._v(\"送\")]), _vm._v(\" \"), _c('p', [_vm._v(\"货\")]), _vm._v(\" \"), _c('p', [_vm._v(\"方\")]), _vm._v(\" \"), _c('p', [_vm._v(\"量\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barII\"\n  }, [_c('p', [_vm._v(\"总\")]), _vm._v(\" \"), _c('p', [_vm._v(\"耗\")]), _vm._v(\" \"), _c('p', [_vm._v(\"油\")]), _vm._v(\" \"), _c('p', [_vm._v(\"量\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barIII\"\n  }, [_c('p', [_vm._v(\"单\")]), _vm._v(\" \"), _c('p', [_vm._v(\"方\")]), _vm._v(\" \"), _c('p', [_vm._v(\"油\")]), _vm._v(\" \"), _c('p', [_vm._v(\"耗\")])])\n}]}\n\n/***/ }),\n\n/***/ 918:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(919);\n\n__webpack_require__(920);\n\n/***/ }),\n\n/***/ 919:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar List = __webpack_require__(855);\n\nvar SeriesModel = __webpack_require__(868);\n\nvar zrUtil = __webpack_require__(794);\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 920:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PointerPath = __webpack_require__(921);\n\nvar graphic = __webpack_require__(808);\n\nvar ChartView = __webpack_require__(869);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 921:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/156.e74c810bd62db451bbbf.js","<template>\r\n    <!-- 车队信息 -->\r\n    <div class=\"heigth-div scrollBar\" ref=\"wrapHeight\">\r\n        <div class=\"point-div\">\r\n            <div v-if=\"isday\" class=\"qty-div\" :style = \"{width:wrapWidth+'px',height:qtyHeight+'px'}\">\r\n                <div class=\"barI\">\r\n                    <p>送</p>\r\n                    <p>货</p>\r\n                    <p>方</p>\r\n                    <p>量</p>\r\n                </div>\r\n                <div ref=\"qty_chart\" class=\"bar-chart\" :style = \"{width:wrapWidth+'px'}\"></div>\r\n                <div class=\"barII\">\r\n                    <p>总</p>\r\n                    <p>耗</p>\r\n                    <p>油</p>\r\n                    <p>量</p>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"isday\" class=\"yh-div\" :style = \"{width:wrapWidth+'px',height:yhHeight+'px'}\">\r\n                <div class=\"barIII\">\r\n                    <p>单</p>\r\n                    <p>方</p>\r\n                    <p>油</p>\r\n                    <p>耗</p>\r\n                </div>\r\n                <div ref=\"yh_chart\" class=\"yh-chart\" :style = \"{width:wrapWidth+'px'}\"></div>\r\n            </div>\r\n        </div>\r\n        <!-- <span>111</span> -->\r\n        <div v-if=\"isyear\" ref=\"cl_chart\" class=\"cl-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div>\r\n        <!-- <table class=\"el-table self-table adjust-tableI\">\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\"></div></th>\r\n                <td style=\"text-indent:2em\"><div class=\"cell\">方量</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">耗油量</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">单方耗油量</div></td>\r\n            </tr>\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\">前天:</div></th>\r\n                <td style=\"text-indent:2em\"><div class=\"cell\">{{bydConsumeqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{bydTransportqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{bydExcept}}</div></td>\r\n            </tr>\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\">昨天:</div></th>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{ydConsumeqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{ydTransportqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{ydExcept}}</div></td>\r\n            </tr>\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\">上月:</div></th>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{lmConsumeqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{lmTransportqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{lmExcept}}</div></td>\r\n            </tr>\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\">本月:</div></th>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nmConsumeqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nmTransportqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nmExcept}}</div></td>\r\n            </tr>\r\n            <tr>\r\n                <th class=\"is-center\"><div class=\"cell\">本年:</div></th>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nyConsumeqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nyTransportqty}}</div></td>\r\n                <td style=\"text-indent:2em\" ><div class=\"cell\">{{nyExcept}}</div></td>\r\n            </tr>\r\n        </table> -->\r\n    </div>\r\n</template>\r\n<script>\r\n    const echarts = require('echarts/lib/echarts');\r\n    require('echarts/lib/chart/bar');\r\n    require('echarts/lib/chart/line');\r\n    require('echarts/lib/chart/gauge');\r\n    require('echarts/lib/component/tooltip');\r\n    require('echarts/lib/component/legend');\r\n    export default {\r\n        data() {\r\n            return {\r\n                isday:true,\r\n                isyear:false,\r\n                dayData:[],\r\n                consumeqtyData:[],\r\n                transportqtyData:[],\r\n                singleData:[],\r\n                consumptionYear:0,\r\n                qtyYear:0,\r\n                qtyAverage:0,\r\n                wrapHeight: 210,\r\n                wrapWidth: 329,\r\n                qtyHeight: 140,\r\n                yhHeight: 140,\r\n            }\r\n        },\r\n        activated(){\r\n            this.init();\r\n        },\r\n        mounted() {\r\n            this.init();\r\n            this.getDivHeight();\r\n        },\r\n        watch:{\r\n            '$store.state.weekTextV':'getweekText'\r\n        },\r\n        methods: {\r\n            init(){\r\n                this.getweekText();\r\n            },\r\n            getDivHeight(){\r\n                this.wrapHeight = this.$refs.wrapHeight.offsetHeight+10;\r\n                this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\r\n                this.qtyHeight = this.wrapHeight/2;\r\n                this.yhHeight = this.wrapHeight/2;\r\n            },\r\n\r\n            //切换\r\n            getweekText(){\r\n                if(this.$store.state.weekTextV === 3){\r\n                    this.isday = false;\r\n                    setTimeout(()=>{\r\n                        this.isyear = true;\r\n                    })\r\n                }else {\r\n                    this.isyear = false;\r\n                    setTimeout(()=>{\r\n                        this.isday = true;\r\n                    })\r\n                }\r\n                this.getlist();\r\n            },\r\n\r\n            //获取数据\r\n            getlist(){\r\n                let tempData = [];\r\n                this.dayData = [];\r\n                this.singleData = [];\r\n                this.consumeqtyData = [];\r\n                this.transportqtyData = [];\r\n                let dataI = [];\r\n                let dataII = [];\r\n                let dataIII = [];\r\n                this.getAjax('/mktmfc/forms/getcarlistmsg?datetype='+this.$store.state.weekTextV)\r\n                .then((result)=>{\r\n                    if(result.status === 200){\r\n                        tempData = result.data;\r\n                        if(tempData.length === 0){\r\n                            if(this.$store.state.weekTextV === 2){\r\n                                this.dayData = this.returnWeek('year');\r\n                                this.consumeqtyData = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n                                this.transportqtyData = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n                                this.singleData = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n                            }else {\r\n                                this.dayData = this.returnWeek('TendaysNoyear');\r\n                                this.consumeqtyData = [0,0,0,0,0,0,0,0,0,0];\r\n                                this.transportqtyData = [0,0,0,0,0,0,0,0,0,0];\r\n                                this.singleData = [0,0,0,0,0,0,0,0,0,0];\r\n                            }\r\n                        }else {\r\n                            for(let i=0; i<tempData.length; i++){\r\n                                dataI.push(tempData[i].consumedate);\r\n                                dataII.push(tempData[i].consumeqty);\r\n                                dataIII.push(tempData[i].transportqty);\r\n                            }\r\n                            if(this.$store.state.weekTextV === 2){\r\n                                this.dayData = this.returnWeek('yearText')\r\n                                this.consumeqtyData = this.returnReconstruction(dataI,dataII,this.returnWeek('year'))[1]\r\n                                this.transportqtyData = this.returnReconstruction(dataI,dataIII,this.returnWeek('year'))[1].map(item => {\r\n                                                            return (item/10000).toFixed(2)\r\n                                                        })\r\n                            }else {\r\n                                this.dayData = this.returnWeek('TendaysNoyear')\r\n                                this.consumeqtyData = this.returnReconstruction(dataI,dataII,this.returnWeek('Tendays'))[1]\r\n                                this.transportqtyData = this.returnReconstruction(dataI,dataIII,this.returnWeek('Tendays'))[1].map(item => {\r\n                                                            return (item/10000).toFixed(2)\r\n                                                        })\r\n                            }\r\n        \r\n                            //单方油耗\r\n                            for(let i=0; i<this.consumeqtyData.length; i++){\r\n                                if(this.transportqtyData[i] === 0){\r\n                                    this.singleData.push(this.transportqtyData[i])\r\n                                }else {\r\n                                    this.singleData.push((this.consumeqtyData[i]/this.transportqtyData[i]).toFixed(2))\r\n                                }\r\n                                \r\n                            }\r\n\r\n                            this.consumptionYear = tempData[0].consumeqty\r\n                            this.qtyYear = tempData[0].transportqty\r\n                            if(this.qtyYear === 0 || this.qtyYear ===0){\r\n                                this.qtyAverage = 0;\r\n                            }else {\r\n                                this.qtyAverage = (tempData[0].consumeqty/tempData[0].transportqty).toFixed(2)\r\n                            }\r\n                        }\r\n                    }else {\r\n                        this.$message({\r\n                            message:this.returnIntercept(result),\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                })\r\n                .then(()=>{\r\n                    this.initEchart();\r\n                    this.setEchart(this.dayData,this.transportqtyData,this.consumeqtyData,this.singleData,this.qtyYear,this.consumptionYear,this.qtyAverage);\r\n                })\r\n            },\r\n\r\n            initEchart(){\r\n                if(this.isyear){\r\n                    this.cl_chart = echarts.init(this.$refs.cl_chart);\r\n                }else {\r\n                    this.qty_chart = echarts.init(this.$refs.qty_chart);\r\n                    this.yh_chart = echarts.init(this.$refs.yh_chart);\r\n                }\r\n            },\r\n\r\n            //传参\r\n            setEchart(dayData,transportqtyData,consumeqtyData,singleData,qtyYear,consumptionYear,qtyAverage) {\r\n                //bar\r\n                if(!this.isyear){\r\n                    this.qty_chart.setOption({\r\n                        tooltip : {\r\n                            trigger: 'axis',\r\n                            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            data:['方量','油量']\r\n                        },\r\n                        grid: {\r\n                            left: '18%',\r\n                            width:'68%',\r\n                            height:'50%',\r\n                            bottom: '28%'\r\n                        },\r\n                        xAxis : [\r\n                            {\r\n                                type: 'category',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                },\r\n                                data:dayData\r\n                            }\r\n                        ],\r\n                        yAxis : [\r\n                            {\r\n                                type: 'value',\r\n                                name: '万(方)',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                }\r\n                            },\r\n                            {\r\n                                type: 'value',\r\n                                name: '',\r\n                                //interval: 200,\r\n                                axisLabel: {\r\n                                    alignWithLabel: true\r\n                                }\r\n                            },\r\n                        ],\r\n                        series : [\r\n                            {\r\n                                name:'方量',\r\n                                type:'bar',\r\n                                barWidth: '30%',\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: '#37a2da',\r\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                                        shadowBlur: 10\r\n                                    }\r\n                                },\r\n                                data:transportqtyData\r\n                            },\r\n                            {\r\n                                name:'油量',\r\n                                type:'line',\r\n                                yAxisIndex: 1,\r\n                                //barWidth: '30%',\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: '#ff9f7f'\r\n                                    }\r\n                                },\r\n                                lineStyle: {\r\n                                    normal: {\r\n                                        width: 3,\r\n                                        shadowColor: 'rgba(0,0,0,0.4)',\r\n                                        shadowBlur: 10,\r\n                                        shadowOffsetY: 10\r\n                                    }\r\n                                },\r\n                                data:consumeqtyData\r\n                            },\r\n                        ]\r\n                    });\r\n\r\n                    this.yh_chart.setOption({\r\n                        tooltip : {\r\n                            trigger: 'axis',\r\n                            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                            }\r\n                        },\r\n                        grid: {\r\n                            left: '14%',\r\n                            width:'70%',\r\n                            height:'50%',\r\n                            bottom: '40%'\r\n                        },\r\n                        xAxis : [\r\n                            {\r\n                                type: 'category',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                },\r\n                                data:dayData\r\n                            }\r\n                        ],\r\n                        yAxis : [\r\n                            {\r\n                                type: 'value',\r\n                                name: '',\r\n                                axisTick: {\r\n                                    alignWithLabel: true\r\n                                }\r\n                            },\r\n                        ],\r\n                        series : [\r\n                            {\r\n                                name:'日',\r\n                                type:'line',\r\n                                barWidth: '30%',\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: '#ff9f7f'\r\n                                    }\r\n                                },\r\n                                lineStyle: {\r\n                                    normal: {\r\n                                        width: 3,\r\n                                        shadowColor: 'rgba(0,0,0,0.4)',\r\n                                        shadowBlur: 10,\r\n                                        shadowOffsetY: 10\r\n                                    }\r\n                                },\r\n                                data:singleData\r\n                            },\r\n                        ]\r\n                    });\r\n                }else {\r\n                    this.cl_chart.setOption({\r\n                        tooltip : {\r\n                            formatter: \"{a} <br/>{b} : {c}%\"\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                restore: {},\r\n                                saveAsImage: {}\r\n                            }\r\n                        },\r\n                        series: [\r\n                            {   \r\n                                name: '送货方量',\r\n                                center: ['25%', '32%'],\r\n                                radius: '60%', //半径\r\n                                type: 'gauge',\r\n                                splitNumber:5,\r\n                                min:0,           //刻度的最小值\r\n                                max:1000000,     //刻度的最大值\r\n                                //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\r\n                                startAngle: 190,\r\n                                //结束角度。\r\n                                endAngle: -10,\r\n                                //分隔线样式。\r\n                                splitLine: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                //刻度样式。\r\n                                axisTick: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                axisLine: {            // 坐标轴线  \r\n                                    lineStyle: { \r\n                                        //width: 30,      // 属性lineStyle控制线条样式  \r\n                                        color: [[0.2, '#fb7293'],[0.8, '#ff9f7f'],[1, '#e7bcf3']]\r\n                                    }  \r\n                                },  \r\n                                //刻度标签。\r\n                                axisLabel: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    },\r\n                                    formatter:function(e){\r\n                                        switch(e+''){\r\n                                            case \"0\":\r\n                                            return \"0\";\r\n                                            case \"100000\":\r\n                                            return \"100000\";\r\n                                            case \"200000\":\r\n                                            return \"200000\";\r\n                                            // case \"400000\":\r\n                                            // return \"400000\";\r\n                                            // case \"600000\":\r\n                                            // return \"600000\";\r\n                                            case \"800000\":\r\n                                            return \"800000\";\r\n                                            case \"1000000\":\r\n                                            return \"1000000\";\r\n                                        }\r\n                                    },\r\n                                },\r\n                                title: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '-40%'], // x, y，单位px\r\n                                    textStyle: {\r\n                                        color: '#hhh',\r\n                                        fontSize: 20\r\n                                    }\r\n                                },\r\n                                detail: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '50%'],\r\n                                    formatter:'送货方量:{value}',\r\n                                    textStyle: {\r\n                                        fontSize: 15\r\n                                    }\r\n                                },\r\n                                data: [{value: qtyYear}]\r\n                            },\r\n\r\n                            {   \r\n                                name: '总耗油',\r\n                                center: ['76%', '32%'],\r\n                                radius: '60%',\r\n                                type: 'gauge',\r\n                                min:0,           //刻度的最小值\r\n                                max:10000,     //刻度的最大值\r\n                                splitNumber:5,\r\n                                //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\r\n                                startAngle: 190,\r\n                                //结束角度。\r\n                                endAngle: -10,\r\n                                //分隔线样式。\r\n                                splitLine: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                //刻度样式。\r\n                                axisTick: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                axisLine: {            // 坐标轴线  \r\n                                    lineStyle: { \r\n                                        //width: 30,      // 属性lineStyle控制线条样式  \r\n                                        color: [[0.2, '#32c5e9'],[0.8, '#37a2da'],[1, '#9fe6b8']]\r\n                                    }  \r\n                                },\r\n                                //刻度标签。\r\n                                axisLabel: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    },\r\n                                    // formatter:function(e){\r\n                                    //     switch(e+''){\r\n                                    //         case \"0\":\r\n                                    //         return \"0\";\r\n                                    //         case \"10\":\r\n                                    //         return \"1000\";\r\n                                    //         case \"50\":\r\n                                    //         return \"5000\";\r\n                                    //         case \"100\":\r\n                                    //         return \"50000\";\r\n                                    //     }\r\n                                    // },\r\n                                },\r\n                                title: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '-40%'], // x, y，单位px\r\n                                    textStyle: {\r\n                                        color: '#hhh',\r\n                                        fontSize: 20\r\n                                    }\r\n                                },\r\n                                detail: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '50%'],\r\n                                    formatter:'总耗油:{value}',\r\n                                    textStyle: {\r\n                                        fontSize: 15\r\n                                    }\r\n                                },\r\n                                data: [{value: consumptionYear}]\r\n                            },\r\n\r\n                            {   \r\n                                name: '单方耗油量',\r\n                                center: ['50%', '77%'],\r\n                                radius: '52%',\r\n                                type: 'gauge',\r\n                                splitNumber:5,\r\n                                min:0,           //刻度的最小值\r\n                                max:1,     //刻度的最大值\r\n                                //起始角度。圆心 正右手侧为0度，正上方为90度，正左手侧为180度。\r\n                                startAngle: 190,\r\n                                //结束角度。\r\n                                endAngle: -10,\r\n                                //分隔线样式。\r\n                                splitLine: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                //刻度样式。\r\n                                axisTick: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    }\r\n                                },\r\n                                //刻度标签。\r\n                                axisLabel: {\r\n                                    alignWithLabel: true,\r\n                                    textStyle: {\r\n                                        fontSize: 10\r\n                                    },\r\n                                    // formatter:function(e){\r\n                                    //     switch(e+''){\r\n                                    //         case \"0\":\r\n                                    //         return \"0\";\r\n                                    //         case \"10\":\r\n                                    //         return \"0.01\";\r\n                                    //         case \"50\":\r\n                                    //         return \"0.1\";\r\n                                    //         case \"100\":\r\n                                    //         return \"1\";\r\n                                    //     }\r\n                                    // },\r\n                                    \r\n                                },\r\n                                title: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '-40%'], // x, y，单位px\r\n                                    textStyle: {\r\n                                        color: '#hhh',\r\n                                        fontSize: 15\r\n                                    }\r\n                                },\r\n                                detail: {\r\n                                    show: true,\r\n                                    offsetCenter: [0, '45%'],\r\n                                    formatter:'平均油耗:{value}',\r\n                                    textStyle: {\r\n                                        fontSize: 15\r\n                                    }\r\n                                },\r\n                                data: [{value: qtyAverage}]\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\" scoped type=\"text/less\">\r\n    .heigth-div {\r\n        height: 100%;\r\n    }\r\n    .self-table {\r\n        th,td {\r\n            font-weight: normal;\r\n            border: 0px solid #fff;\r\n        }\r\n    }\r\n    .el-table td, .el-table th{\r\n        background-color: #fff;\r\n        height: 35px;\r\n    }\r\n    .point-div{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        p{\r\n            margin: 0 5px;\r\n        }\r\n        .qty-div {\r\n            display: flex;\r\n            position: relative;\r\n            .barI{\r\n                 position: absolute;\r\n                 width: 20px;\r\n                 margin-top: 15px;\r\n             }\r\n            .bar-chart {\r\n                margin: 0 auto;\r\n                @media screen and (max-width: 1500px) {\r\n                    padding: 0 15px;\r\n                }\r\n            }\r\n            .barII{\r\n                position: absolute;\r\n                right: 5px;\r\n                width: 20px;\r\n                margin-top: 15px;\r\n            }\r\n        }\r\n        .yh-div {\r\n            display: flex;\r\n            .barIII {\r\n                width: 20px;\r\n                margin-top: 10px;\r\n            }\r\n        }\r\n        .bar-chart {\r\n            /*width: 420px;*/\r\n            /*height: 150px;*/\r\n        }\r\n        .yh-chart{\r\n            /*width: 420px;*/\r\n            /*height: 150px;*/\r\n        }\r\n    }\r\n    .cl-chart{\r\n        /*width: 420px;*/\r\n        /*height: 274px;*/\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// jiaobanzhanzhang_cdxx.vue?365b1ebf","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".heigth-div[data-v-ca681f30]{height:100%}.self-table td[data-v-ca681f30],.self-table th[data-v-ca681f30]{font-weight:400;border:0 solid #fff}.el-table td[data-v-ca681f30],.el-table th[data-v-ca681f30]{background-color:#fff;height:35px}.point-div[data-v-ca681f30]{display:flex;flex-direction:column;justify-content:space-between}.point-div p[data-v-ca681f30]{margin:0 5px}.point-div .qty-div[data-v-ca681f30]{display:flex;position:relative}.point-div .qty-div .barI[data-v-ca681f30]{position:absolute;width:20px;margin-top:15px}.point-div .qty-div .bar-chart[data-v-ca681f30]{margin:0 auto}@media screen and (max-width:1500px){.point-div .qty-div .bar-chart[data-v-ca681f30]{padding:0 15px}}.point-div .qty-div .barII[data-v-ca681f30]{position:absolute;right:5px;width:20px;margin-top:15px}.point-div .yh-div[data-v-ca681f30]{display:flex}.point-div .yh-div .barIII[data-v-ca681f30]{width:20px;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\"],\"names\":[],\"mappings\":\"AACA,6BACE,WAAa,CACd,AACD,gEAEE,gBAAoB,AACpB,mBAAuB,CACxB,AACD,4DAEE,sBAAuB,AACvB,WAAa,CACd,AACD,4BACE,aAAc,AACd,sBAAuB,AACvB,6BAA+B,CAChC,AACD,8BACE,YAAc,CACf,AACD,qCACE,aAAc,AACd,iBAAmB,CACpB,AACD,2CACE,kBAAmB,AACnB,WAAY,AACZ,eAAiB,CAClB,AACD,gDACE,aAAe,CAChB,AACD,qCACA,gDACI,cAAgB,CACnB,CACA,AACD,4CACE,kBAAmB,AACnB,UAAW,AACX,WAAY,AACZ,eAAiB,CAClB,AACD,oCACE,YAAc,CACf,AACD,4CACE,WAAY,AACZ,eAAiB,CAClB\",\"file\":\"jiaobanzhanzhang_cdxx.vue\",\"sourcesContent\":[\"\\n.heigth-div[data-v-ca681f30] {\\n  height: 100%;\\n}\\n.self-table th[data-v-ca681f30],\\n.self-table td[data-v-ca681f30] {\\n  font-weight: normal;\\n  border: 0px solid #fff;\\n}\\n.el-table td[data-v-ca681f30],\\n.el-table th[data-v-ca681f30] {\\n  background-color: #fff;\\n  height: 35px;\\n}\\n.point-div[data-v-ca681f30] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n.point-div p[data-v-ca681f30] {\\n  margin: 0 5px;\\n}\\n.point-div .qty-div[data-v-ca681f30] {\\n  display: flex;\\n  position: relative;\\n}\\n.point-div .qty-div .barI[data-v-ca681f30] {\\n  position: absolute;\\n  width: 20px;\\n  margin-top: 15px;\\n}\\n.point-div .qty-div .bar-chart[data-v-ca681f30] {\\n  margin: 0 auto;\\n}\\n@media screen and (max-width: 1500px) {\\n.point-div .qty-div .bar-chart[data-v-ca681f30] {\\n    padding: 0 15px;\\n}\\n}\\n.point-div .qty-div .barII[data-v-ca681f30] {\\n  position: absolute;\\n  right: 5px;\\n  width: 20px;\\n  margin-top: 15px;\\n}\\n.point-div .yh-div[data-v-ca681f30] {\\n  display: flex;\\n}\\n.point-div .yh-div .barIII[data-v-ca681f30] {\\n  width: 20px;\\n  margin-top: 10px;\\n}\\n.point-div .bar-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 150px;*/\\n}\\n.point-div .yh-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 150px;*/\\n}\\n.cl-chart[data-v-ca681f30] {\\n  /*width: 420px;*/\\n  /*height: 274px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-ca681f30\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\n// module id = 1382\n// module chunks = 156","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ca681f30\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./jiaobanzhanzhang_cdxx.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"669b2794\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-ca681f30\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\n// module id = 1513\n// module chunks = 156","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ca681f30\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./jiaobanzhanzhang_cdxx.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./jiaobanzhanzhang_cdxx.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ca681f30\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./jiaobanzhanzhang_cdxx.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-ca681f30\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\n// module id = 1523\n// module chunks = 156","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"heigth-div scrollBar\"\n  }, [_c('div', {\n    staticClass: \"point-div\"\n  }, [(_vm.isday) ? _c('div', {\n    staticClass: \"qty-div\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.qtyHeight + 'px'\n    })\n  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n    ref: \"qty_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px'\n    })\n  }), _vm._v(\" \"), _vm._m(1)]) : _vm._e(), _vm._v(\" \"), (_vm.isday) ? _c('div', {\n    staticClass: \"yh-div\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.yhHeight + 'px'\n    })\n  }, [_vm._m(2), _vm._v(\" \"), _c('div', {\n    ref: \"yh_chart\",\n    staticClass: \"yh-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px'\n    })\n  })]) : _vm._e()]), _vm._v(\" \"), (_vm.isyear) ? _c('div', {\n    ref: \"cl_chart\",\n    staticClass: \"cl-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  }) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barI\"\n  }, [_c('p', [_vm._v(\"送\")]), _vm._v(\" \"), _c('p', [_vm._v(\"货\")]), _vm._v(\" \"), _c('p', [_vm._v(\"方\")]), _vm._v(\" \"), _c('p', [_vm._v(\"量\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barII\"\n  }, [_c('p', [_vm._v(\"总\")]), _vm._v(\" \"), _c('p', [_vm._v(\"耗\")]), _vm._v(\" \"), _c('p', [_vm._v(\"油\")]), _vm._v(\" \"), _c('p', [_vm._v(\"量\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"barIII\"\n  }, [_c('p', [_vm._v(\"单\")]), _vm._v(\" \"), _c('p', [_vm._v(\"方\")]), _vm._v(\" \"), _c('p', [_vm._v(\"油\")]), _vm._v(\" \"), _c('p', [_vm._v(\"耗\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-ca681f30\",\"hasScoped\":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/page/erp_pc/erp_ph/ph_block/jiaobanzhanzhang_cdxx.vue\n// module id = 1729\n// module chunks = 156","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge.js\n// module id = 918\n// module chunks = 141 146 147 148 149 153 154 155 156","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = 919\n// module chunks = 141 146 147 148 149 153 154 155 156","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeView.js\n// module id = 920\n// module chunks = 141 146 147 148 149 153 154 155 156","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/PointerPath.js\n// module id = 921\n// module chunks = 141 146 147 148 149 153 154 155 156"],"sourceRoot":""}