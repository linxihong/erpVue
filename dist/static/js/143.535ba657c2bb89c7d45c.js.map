{"version":3,"sources":["webpack:///static/js/143.535ba657c2bb89c7d45c.js","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb****","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca****","webpack:///./~/zrender/lib/tool/path.js?dc4b****","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2****","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd***","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc***","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5***","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9***","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2***","webpack:///./~/echarts/lib/layout/barGrid.js?d23e***","webpack:///street_ranking.vue","webpack:///./src/page/erp_pc/erp_report/report_block/street_ranking.vue?1ce2","webpack:///./src/page/erp_pc/erp_report/report_block/street_ranking.vue?2687","webpack:///./src/page/erp_pc/erp_report/report_block/street_ranking.vue","webpack:///./src/page/erp_pc/erp_report/report_block/street_ranking.vue?8336","webpack:///./~/zrender/lib/core/util.js?10f4****","webpack:///./~/echarts/lib/util/graphic.js?e267****","webpack:///./~/echarts/lib/echarts.js?68a2****","webpack:///./~/echarts/lib/util/number.js?43e3****","webpack:///./~/echarts/lib/util/model.js?e2bd****","webpack:///./~/zrender/lib/core/vector.js?6654****","webpack:///./~/zrender/lib/graphic/Path.js?c119****","webpack:///./~/zrender/lib/core/env.js?9ccc****","webpack:///./~/echarts/lib/config.js?2f63****","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6****","webpack:///./~/echarts/lib/util/format.js?7f72****","webpack:///./~/echarts/lib/model/Model.js?f4df****","webpack:///./~/echarts/lib/util/clazz.js?3e66****","webpack:///./~/echarts/lib/model/Component.js?0e02****","webpack:///./~/zrender/lib/contain/text.js?3a43****","webpack:///./~/echarts/lib/util/layout.js?2b1e****","webpack:///./~/echarts/lib/coord/axisHelper.js?4730****","webpack:///./~/zrender/lib/core/curve.js?9511****","webpack:///./~/zrender/lib/core/matrix.js?97a2****","webpack:///./~/zrender/lib/core/event.js?24ff****","webpack:///./~/zrender/lib/mixin/Eventful.js?223b****","webpack:///./~/zrender/lib/tool/color.js?284f****","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01****","webpack:///./~/echarts/lib/data/List.js?b096****","webpack:///./~/echarts/lib/scale/Scale.js?c922****","webpack:///./~/zrender/lib/config.js?2861****","webpack:///./~/zrender/lib/container/Group.js?8d57****","webpack:///./~/zrender/lib/core/PathProxy.js?69e9****","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1****","webpack:///./~/echarts/lib/model/Series.js?186c****","webpack:///./~/echarts/lib/view/Chart.js?72f3****","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30****","webpack:///./~/echarts/lib/scale/Interval.js?08e9****","webpack:///./~/echarts/lib/util/component.js?cc72****","webpack:///./~/echarts/lib/util/symbol.js?be2c****","webpack:///./~/echarts/lib/util/throttle.js?56b3****","webpack:///./~/zrender/lib/core/timsort.js?0a74****","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45****","webpack:///./~/zrender/lib/graphic/Gradient.js?5165****","webpack:///./~/zrender/lib/graphic/helper/image.js?8535****","webpack:///./~/echarts/lib/component/tooltip.js?b491****","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e****","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc****","webpack:///./~/echarts/lib/chart/bar.js?931c***","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189****","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf****","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0****","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417****","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854****","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88****","webpack:///./~/echarts/lib/coord/Axis.js?736c****","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0****","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573****","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454****","webpack:///./~/echarts/lib/scale/helper.js?370b****","webpack:///./~/zrender/lib/Element.js?325b****","webpack:///./~/zrender/lib/animation/Animator.js?d2b9****","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88****","webpack:///./~/zrender/lib/contain/util.js?0031****","webpack:///./~/zrender/lib/contain/windingLine.js?625a****","webpack:///./~/zrender/lib/core/LRU.js?018e****","webpack:///./~/zrender/lib/core/bbox.js?1b56****","webpack:///./~/zrender/lib/core/guid.js?f0e4****","webpack:///./~/zrender/lib/core/log.js?26a2****","webpack:///./~/zrender/lib/graphic/Image.js?bf1b****","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e****","webpack:///./~/zrender/lib/graphic/Style.js?22d9****","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c****","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d****","webpack:///./~/zrender/lib/graphic/helper/text.js?069c****","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b****","webpack:///./~/zrender/lib/zrender.js?5dcd****","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167****","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4****","webpack:///./~/echarts/lib/component/gridSimple.js?eec5****","webpack:///./~/echarts/lib/ExtensionAPI.js?e283****","webpack:///./~/echarts/lib/component/axis.js?8a87****","webpack:///./~/echarts/lib/component/axisPointer.js?110d****","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a****","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293****","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a****","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e****","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8****","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a****","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54****","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac****","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52****","webpack:///./~/echarts/lib/coord/axisDefault.js?4492****","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4****","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345****","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246****","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b****","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817****","webpack:///./~/echarts/lib/coord/geo/Region.js?fc66****","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js?edf7****","webpack:///./~/echarts/lib/data/DataDiffer.js?f330****","webpack:///./~/echarts/lib/export.js?1f28****","webpack:///./~/echarts/lib/helper.js?5794****","webpack:///./~/echarts/lib/loading/default.js?8a5f****","webpack:///./~/echarts/lib/model/Global.js?b9d3****","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5****","webpack:///./~/echarts/lib/model/globalDefault.js?fd54****","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41****","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7****","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011****","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579****","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8****","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171****","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6****","webpack:///./~/echarts/lib/scale/Log.js?0ad0****","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b****","webpack:///./~/echarts/lib/scale/Time.js?6fdf****","webpack:///./~/echarts/lib/view/Component.js?415a****","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a****","webpack:///./~/zrender/lib/Handler.js?fbeb****","webpack:///./~/zrender/lib/Layer.js?f586****","webpack:///./~/zrender/lib/Painter.js?ee99****","webpack:///./~/zrender/lib/Storage.js?7e93****","webpack:///./~/zrender/lib/animation/Animation.js?8743****","webpack:///./~/zrender/lib/animation/Clip.js?fef9****","webpack:///./~/zrender/lib/animation/easing.js?64b6****","webpack:///./~/zrender/lib/contain/arc.js?7367****","webpack:///./~/zrender/lib/contain/cubic.js?b90e****","webpack:///./~/zrender/lib/contain/line.js?4326****","webpack:///./~/zrender/lib/contain/path.js?2e7f****","webpack:///./~/zrender/lib/contain/polygon.js?1f9f****","webpack:///./~/zrender/lib/contain/quadratic.js?f589****","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd****","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7****","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636****","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250****","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e****","webpack:///./~/zrender/lib/graphic/Text.js?3244****","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713****","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c****","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea****","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994****","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4****","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e****","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728****","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d****","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb****","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d****","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c****","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767****"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","Animator","log","_util","isString","isFunction","isObject","isArrayLike","indexOf","Animatable","this","animators","prototype","constructor","animate","path","loop","target","animatingShape","el","zr","__zr","pathSplitted","split","prop","i","l","length","id","animator","during","dirty","done","splice","push","animation","addAnimator","stopAnimation","forwardToLast","len","stop","animateTo","time","delay","easing","callback","forceAnimate","count","_animateToShallow","slice","start","source","objShallow","propertyCount","name","hasOwnProperty","props","attr","when","_default","1001","Draggable","on","_dragStart","_drag","_dragEnd","param","e","topTarget","draggingTarget","draggable","_draggingTarget","dragging","_x","offsetX","_y","offsetY","dispatchToElement","event","x","y","dx","dy","drift","dropTarget","findHover","lastDropTarget","_dropTarget","1002","processArc","x1","y1","x2","y2","fa","fs","rx","ry","psiDeg","cmd","psi","PI","xp","mathCos","mathSin","yp","lambda","mathSqrt","f","cxp","cyp","cx","cy","theta","vAngle","u","v","dTheta","vRatio","addData","createPathProxyFromString","data","n","cs","replace","cc","RegExp","prevCmd","arr","cpx","cpy","PathProxy","CMD","str","c","charAt","off","p","shift","parseFloat","isNaN","ctlPtx","ctlPty","L","M","C","pathData","Q","A","Z","toStatic","createPathOptions","opts","pathProxy","buildPath","setData","ctx","getContext","rebuildPath","applyTransform","m","transformPath","createFromString","Path","extendFromString","extend","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","shape","pathBundle","appendPath","Math","sqrt","sin","cos","vMag","acos","1003","nPoint","j","k","R","sx","sy","angle","mathAtan2","v2ApplyTransform","points","_vector","atan2","1005","BaseBarSeries","type","dependencies","brushSelector","1006","removeRect","dataIndex","animationModel","style","text","graphic","updateProps","width","parent","remove","removeSector","r","r0","updateStyle","itemModel","layout","seriesModel","isHorizontal","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","get","useStyle","zrUtil","defaults","fill","cursorStyle","getShallow","labelPositionOutside","height","setLabel","setHoverStyle","getLineWidth","rawLayout","lineWidth","BAR_BORDER_WIDTH_QUERY","min","abs","_config","echarts","__DEV__","_helper","Model","barItemStyle","extendChartView","render","ecModel","api","coordinateSystemType","_render","group","dispose","noop","isHorizontalOrRadial","getData","oldData","_data","coord","coordinateSystem","baseAxis","getBaseAxis","dim","isAnimationEnabled","diff","add","hasValue","getItemModel","getLayout","elementCreator","setItemGraphicEl","update","newIndex","oldIndex","getItemGraphicEl","execute","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","polar","isRadial","sector","Sector","sectorShape","startAngle","getItemLayout","fixedLineWidth","signX","signY","endAngle","1007","SeriesModel","createListFromArray","getInitialData","option","getMarkerPosition","value","coordSys","pt","dataToPoint","offset","size","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","itemStyle","1008","makeStyleMapper","excludes","getBorderLineDash","lineDash","1009","normalStyle","labelModel","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getRawValue","isRectText","autoColor","fixPosition","textPosition","1016","getSeriesStackId","STACK_PREFIX","seriesIndex","getAxisKey","axis","index","getLayoutOnAxis","opt","params","bandWidth","getBandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","result","item","offsetCenter","calBarWidthAndOffset","barSeries","map","cartesian","axisExtent","getExtent","barWidth","parsePercent","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","each","seriesInfo","idx","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","gap","stacks","maxWidth","coordSysName","barGapPercent","autoWidth","max","column","stack","lastColumn","widthSum","barLayoutGrid","seriesType","barWidthAndOffset","filter","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","eachSeriesByType","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","valueAxisStart","onZero","toGlobalCoord","dataToCoord","getGlobalExtent","coordDims","coordDimToDataDim","coords","mapArray","setLayout","sign","lastCoord","lastCoordOrigin","setItemLayout","_number","1238","__webpack_exports__","Object","defineProperty","regionnameData","regionData","wrapHeight","wrapWidth","mounted","init","methods","getlist","getDivHeight","$refs","offsetHeight","offsetWidth","_this","tempData","dataI","a","b","getAjax","then","status","clientOrderAreaSum","isEquals","buildsite","qty","qtyorder","_i","$message","message","returnIntercept","initEchart","setEchart","bar_chart","setOption","tooltip","trigger","axisPointer","grid","left","bottom","xAxis","yAxis","series","normal","label","show","position","1334","version","sources","names","mappings","file","sourcesContent","sourceRoot","1465","content","locals","1560","injectStyle","ssrContext","Component","1660","_vm","_h","$createElement","_c","_self","ref","staticClass","staticRenderFns","794","$override","fn","clone","typeStr","objToString","call","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","merge","overwrite","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","overlay","_ctx","createCanvas","array","inherits","clazz","baseClazz","F","clazzPrototype","superClass","mixin","obj","cb","context","forEach","nativeForEach","nativeMap","reduce","memo","nativeReduce","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","createElement","prefixedKey","removeKey","808","extendShape","extendPath","pathTool","makePath","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","Image","image","onload","img","setStyle","aspect","pathRect","calculateTransform","subPixelOptimizeLine","round","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","colorTool","lift","cacheElementStl","__hoverStlDirty","stroke","__hoverStl","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","normalStyleText","emphasisStyleText","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textOffset","labelRotate","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","animatableModel","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","transform","invert","Transformable","vector","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Group","Text","Circle","Ring","Polygon","Polyline","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","809","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","prio","themeStorage","_dom","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","methodName","finder","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","component","componentModel","updateZ","eachSeries","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","processData","process","stackSeriesData","stackedDataMap","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","GlobalModel","OptionManager","_throttle","seriesColor","loadingDefault","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","one","echartsProto","getDom","getZr","notMerge","lazyUpdate","optionManager","setTheme","console","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","Infinity","top","right","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","getDataParams","dataType","eventData","_disposed","clear","Date","disconnect","dataTool","___ec_export","810","_trim","linearMap","domain","range","clamp","subDomain","subRange","percent","all","match","precision","returnStr","toFixed","asc","sort","getPrecision","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","MAX_SAFE_INTEGER","811","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","createDataFormatModel","dataFormatMixin","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","has","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","rawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesName","marker","getTooltipMarker","$vars","labelProp","formatter","formatTpl","formatTooltip","makeGetter","hostObj","812","out","ArrayCtor","copy","v1","v2","scaleAndAdd","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","813","Displayable","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","strokeContainThreshold","brush","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","restoreTransform","drawRectText","shapeCfg","inBundle","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","attrKV","Sub","defaultShape","thisShape","819","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","820","global","dev","821","vec2","union","other","lt","rb","lb","rt","maxX","maxY","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","822","addCommas","toCamelCase","upperCaseFirst","group1","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","823","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","824","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","838","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","844","font","DEFAULT_FONT","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","containerWidth","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","845","boxLayout","orient","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","newParams","newValueCount","merged","mergedValueCount","hasProp","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","box","vbox","hbox","846","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","847","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","B","t1","disc","K","t2","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","848","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","851","clientToLocal","calculate","defaultGetZrXY","layerX","zrX","zrY","layerY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","852","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","853","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","G","vMin","vMax","delta","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","854","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","855","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","856","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","end","thisExtent","_isBlank","857","debugMode","858","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","invisible","childRect","859","curve","bbox","min2","max2","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","anticlockwise","arcTo","radius","closePath","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","fromArc","ux","uy","scaleX","scaleY","isEllipse","860","includes","868","_format","_clazz","colorPaletteMixin","legendDataProvider","visualColorAccessPath","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","869","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","872","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","873","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","874","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","875","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","proxySymbol","876","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","877","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","878","Style","__clipPaths","RectText","culling","cursor","afterBrush","rectContain","animateStyle","879","Gradient","addColorStop","880","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","881","882","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","883","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","884","885","886","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","887","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","clockwise","888","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","_symbol","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","rawTick","889","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointerClazz","registerAxisPointerClass","890","gridModel","rawAxisPosition","axisPosition","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","labelInside","getLabelInterval","891","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","getLabelsCoords","getRotate","892","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","893","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","894","colorIdx","colorNameMap","colorPalette","895","fixExtent","896","guid","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","removeAnimator","897","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","clipList","removeClip","getClips","898","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","899","normalizeRadian","PI2","900","windingLine","dir","901","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","902","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","903","idStart","904","905","ZImage","_image","sWidth","sHeight","drawImage","906","repeat","createPattern","907","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","908","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","909","r1","r2","r3","r4","total","910","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","911","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","transformCoordToGlobal","912","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","915","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","grids","916","orignalBrush","modified","clipPaths","shadowTemp","917","getItemStyle","925","chartInstance","echartsAPIList","926","927","axisTrigger","link","928","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","929","globalListener","AxisPointerView","930","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","931","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","elStyle","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","932","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","933","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","prevX","prevY","areaInterval","areaStyle","934","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","zrColor","borderName","camelCase","TooltipContent","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","935","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","936","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","937","nameRotate","nameTruncate","nameTextStyle","nameGap","symbolSize","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","categoryAxis","timeAxis","logAxis","logBase","938","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","939","coordExtent","940","dimAxisMapper","_axes","Cartesian","_dimList","getAxesByScale","_dataCoordConvert","input","dimList","output","941","axisX","axisY","942","containLabel","943","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","944","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","polygon","featureObj","region","945","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","946","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","947","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","948","maskColor","mask","labelRect","949","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","950","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","951","platform","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","952","953","954","lineType","955","getLineDash","dotSize","dashSize","956","graphicUtil","PATH_COLOR","957","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","958","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","959","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","960","rank","961","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","962","componentProto","963","encodeColor","colorAccessPath","969","makeEventPacket","eveType","targetInfo","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","970","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","971","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","viewportRoot","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","972","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","973","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","974","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","975","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","976","_l","977","978","_a","_b","979","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","980","981","_curve","982","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","983","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","984","paths","_updatePathDirty","985","globalCoord","986","987","textHelper","988","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","989","interpolate","segs","w2","w3","990","991","unitX","unitY","992","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","993","994","995","polyHelper","996","997","998","999","fixClipWithShadow"],"mappings":"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","file":"static/js/143.535ba657c2bb89c7d45c.js","sourcesContent":["webpackJsonp([143],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(897);\n\nvar log = __webpack_require__(904);\n\nvar _util = __webpack_require__(794);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar PathProxy = __webpack_require__(859);\n\nvar transformPath = __webpack_require__(1003);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(859);\n\nvar _vector = __webpack_require__(812);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(1007);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar _helper = __webpack_require__(1009);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(823);\n\nvar barItemStyle = __webpack_require__(1008);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(868);\n\nvar createListFromArray = __webpack_require__(883);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(808);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1238:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n\nvar echarts = __webpack_require__(809);\n__webpack_require__(884);\n__webpack_require__(881);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            regionnameData: ['狮山镇', '里水镇', '大沥镇', '罗村街道', '丹灶镇', '桂城街道', '西樵镇', '九江镇'],\n            regionData: [],\n            wrapHeight: 183,\n            wrapWidth: 366\n        };\n    },\n    mounted: function mounted() {\n        this.init();\n    },\n\n    methods: {\n        init: function init() {\n            this.getlist();\n            this.getDivHeight();\n        },\n        getDivHeight: function getDivHeight() {\n            this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\n            this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\n        },\n\n\n        //获取数据\n        getlist: function getlist() {\n            var _this = this;\n\n            var tempData = [];\n            var dataI = [];\n            var a = 0;\n            var b = 0;\n            this.regionData = [], this.getAjax('/mktmfc/forms/getarearanking').then(function (result) {\n                if (result.status === 200) {\n                    tempData = result.data.clientOrderAreaSum;\n                    if (tempData.length === 0) {\n                        _this.regionData = [0, 0, 0, 0, 0, 0, 0, 0];\n                    } else {\n                        if (_this.regionnameData.length > tempData.length) {\n                            a = _this.regionnameData.length;\n                            b = tempData.length;\n                        } else {\n                            a = tempData.length;\n                            b = _this.regionnameData.length;\n                        }\n                        for (var i = 0; i < a; i++) {\n                            var isEquals = false;\n                            for (var j = 0; j < b; j++) {\n                                if (_this.regionnameData[i] === tempData[j].buildsite) {\n                                    isEquals = true;\n                                    dataI.push({ name: _this.regionnameData[i], qty: tempData[j].qtyorder });\n                                }\n                            }\n                            if (!isEquals) {\n                                dataI.push({ name: _this.regionnameData[i], qty: 0 });\n                            }\n                        }\n\n                        for (var _i = 0; _i < dataI.length; _i++) {\n                            _this.regionData.push(dataI[_i].qty);\n                        }\n                    }\n                    //console.log(456,this.regionData)\n                    //console.log(456,this.reduceObj(this.regionData,'name'))\n                } else {\n                    _this.$message({\n                        message: _this.returnIntercept(result),\n                        type: 'error'\n                    });\n                }\n            }).then(function () {\n                _this.initEchart();\n                _this.setEchart(_this.regionData);\n            });\n        },\n        initEchart: function initEchart() {\n            this.bar_chart = echarts.init(this.$refs.bar_chart);\n        },\n        setEchart: function setEchart(regionData) {\n            this.bar_chart.setOption({\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                    }\n                },\n                // legend: {\n                //     data:['本月','上月'],\n                //     right: '7%',\n                // },\n                grid: {\n                    left: '16%',\n                    height: '60%',\n                    width: '75%',\n                    bottom: '20%'\n                },\n                xAxis: [{\n                    type: 'category',\n                    name: '',\n                    // axisTick: {\n                    //     alignWithLabel: true\n                    // },\n                    data: ['狮山', '里水', '大沥', '罗村', '丹灶', '桂城', '西樵', '九江']\n                }],\n                yAxis: [{\n                    name: '',\n                    type: 'value'\n                }],\n                series: [{\n                    name: '方量',\n                    type: 'bar',\n                    barWidth: '20%',\n                    itemStyle: {\n                        normal: {\n                            color: '#fbb8a1'\n                        }\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'top'\n                        }\n                    },\n                    data: regionData\n                }]\n            });\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 1334:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(656)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".wrap-div[data-v-55a2b4da]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_report/report_block/street_ranking.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"street_ranking.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-55a2b4da] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-55a2b4da] {\\n  /*width: 510px;*/\\n  /*height: 238px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1465:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1334);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(657)(\"07e609a6\", content, true, {});\n\n/***/ }),\n\n/***/ 1560:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(1465)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(1238),\n  /* template */\n  __webpack_require__(1660),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-55a2b4da\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1660:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [_c('div', {\n    ref: \"bar_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 808:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar pathTool = __webpack_require__(1002);\n\nvar colorTool = __webpack_require__(853);\n\nvar matrix = __webpack_require__(848);\n\nvar vector = __webpack_require__(812);\n\nvar Path = __webpack_require__(813);\n\nvar Transformable = __webpack_require__(911);\n\nvar Image = __webpack_require__(905);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(858);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(987);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(993);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(999);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(998);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(995);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(996);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(997);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(994);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(992);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(991);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(984);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(985);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(986);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(821);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 809:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(912);\n\nvar zrUtil = __webpack_require__(794);\n\nvar colorTool = __webpack_require__(853);\n\nvar env = __webpack_require__(819);\n\nvar timsort = __webpack_require__(877);\n\nvar Eventful = __webpack_require__(852);\n\nvar GlobalModel = __webpack_require__(949);\n\nvar ExtensionAPI = __webpack_require__(925);\n\nvar CoordinateSystemManager = __webpack_require__(872);\n\nvar OptionManager = __webpack_require__(950);\n\nvar backwardCompat = __webpack_require__(957);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar SeriesModel = __webpack_require__(868);\n\nvar ComponentView = __webpack_require__(962);\n\nvar ChartView = __webpack_require__(869);\n\nvar graphic = __webpack_require__(808);\n\nvar modelUtil = __webpack_require__(811);\n\nvar _throttle = __webpack_require__(876);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(963);\n\nvar loadingDefault = __webpack_require__(948);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(946);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 810:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar formatUtil = __webpack_require__(822);\n\nvar nubmerUtil = __webpack_require__(810);\n\nvar Model = __webpack_require__(823);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 812:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 813:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar zrUtil = __webpack_require__(794);\n\nvar PathProxy = __webpack_require__(859);\n\nvar pathContain = __webpack_require__(979);\n\nvar Pattern = __webpack_require__(906);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 819:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 820:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 821:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(812);\n\nvar matrix = __webpack_require__(848);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 822:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar numberUtil = __webpack_require__(810);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 823:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar lineStyleMixin = __webpack_require__(955);\n\nvar areaStyleMixin = __webpack_require__(952);\n\nvar textStyleMixin = __webpack_require__(956);\n\nvar itemStyleMixin = __webpack_require__(954);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 824:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 838:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar layout = __webpack_require__(845);\n\nvar boxLayoutMixin = __webpack_require__(953);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 844:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(821);\n\nvar imageHelper = __webpack_require__(880);\n\nvar _util = __webpack_require__(794);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 845:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(822);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 846:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar OrdinalScale = __webpack_require__(960);\n\nvar IntervalScale = __webpack_require__(873);\n\nvar Scale = __webpack_require__(856);\n\nvar numberUtil = __webpack_require__(810);\n\n__webpack_require__(961);\n\n__webpack_require__(959);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 847:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 848:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 851:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(852);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(819);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 852:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 853:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(901);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 854:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 855:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar DataDiffer = __webpack_require__(945);\n\nvar modelUtil = __webpack_require__(811);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 856:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(824);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 857:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 858:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Element = __webpack_require__(896);\n\nvar BoundingRect = __webpack_require__(821);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 859:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(847);\n\nvar vec2 = __webpack_require__(812);\n\nvar bbox = __webpack_require__(902);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _config = __webpack_require__(857);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 860:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 868:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar _format = __webpack_require__(822);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(824);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(811);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar colorPaletteMixin = __webpack_require__(894);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 869:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Group = __webpack_require__(858);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar modelUtil = __webpack_require__(811);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 872:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 873:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(810);\n\nvar formatUtil = __webpack_require__(822);\n\nvar Scale = __webpack_require__(856);\n\nvar helper = __webpack_require__(895);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 874:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _clazz = __webpack_require__(824);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 875:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar BoundingRect = __webpack_require__(821);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 876:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 877:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 878:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Style = __webpack_require__(907);\n\nvar Element = __webpack_require__(896);\n\nvar RectText = __webpack_require__(990);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 880:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(901);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 881:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\n__webpack_require__(927);\n\n__webpack_require__(935);\n\n__webpack_require__(936);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 882:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _model = __webpack_require__(811);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 883:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar List = __webpack_require__(855);\n\nvar completeDimensions = __webpack_require__(882);\n\nvar _model = __webpack_require__(811);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(872);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 884:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar barLayoutGrid = __webpack_require__(1016);\n\n__webpack_require__(915);\n\n__webpack_require__(1005);\n\n__webpack_require__(1006);\n\n__webpack_require__(917);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n\n/***/ 885:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 886:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar modelUtil = __webpack_require__(811);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 887:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar textContain = __webpack_require__(844);\n\nvar formatUtil = __webpack_require__(822);\n\nvar matrix = __webpack_require__(848);\n\nvar axisHelper = __webpack_require__(846);\n\nvar AxisBuilder = __webpack_require__(888);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 888:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(822);\n\nvar graphic = __webpack_require__(808);\n\nvar Model = __webpack_require__(823);\n\nvar _number = __webpack_require__(810);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(875);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(848);\n\nvar _vector = __webpack_require__(812);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 889:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(809);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 890:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 891:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar numberUtil = __webpack_require__(810);\n\nvar axisHelper = __webpack_require__(846);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 892:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisHelper = __webpack_require__(846);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 893:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar axisModelCreator = __webpack_require__(938);\n\nvar axisModelCommonMixin = __webpack_require__(892);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 894:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(824);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 895:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(810);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 896:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(903);\n\nvar Eventful = __webpack_require__(852);\n\nvar Transformable = __webpack_require__(911);\n\nvar Animatable = __webpack_require__(1000);\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 897:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(974);\n\nvar color = __webpack_require__(853);\n\nvar _util = __webpack_require__(794);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 898:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 899:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 900:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 901:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 902:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(812);\n\nvar curve = __webpack_require__(847);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 903:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 904:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(857);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 905:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar zrUtil = __webpack_require__(794);\n\nvar imageHelper = __webpack_require__(880);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 906:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 907:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 908:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(989);\n\nvar smoothBezier = __webpack_require__(988);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 909:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 910:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(844);\n\nvar roundRectHelper = __webpack_require__(909);\n\nvar imageHelper = __webpack_require__(880);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 911:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(848);\n\nvar vector = __webpack_require__(812);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 912:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(903);\n\nvar env = __webpack_require__(819);\n\nvar zrUtil = __webpack_require__(794);\n\nvar Handler = __webpack_require__(969);\n\nvar Storage = __webpack_require__(972);\n\nvar Painter = __webpack_require__(971);\n\nvar Animation = __webpack_require__(973);\n\nvar HandlerProxy = __webpack_require__(983);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 915:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(846);\n\nvar Cartesian2D = __webpack_require__(941);\n\nvar Axis2D = __webpack_require__(939);\n\nvar CoordinateSystem = __webpack_require__(872);\n\n__webpack_require__(942);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(819);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 917:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\n__webpack_require__(915);\n\n__webpack_require__(926);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 925:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 926:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(893);\n\n__webpack_require__(933);\n\n/***/ }),\n\n/***/ 927:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\nvar axisTrigger = __webpack_require__(932);\n\n__webpack_require__(928);\n\n__webpack_require__(929);\n\n__webpack_require__(931);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 928:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 929:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar globalListener = __webpack_require__(886);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 930:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar graphic = __webpack_require__(808);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\nvar eventTool = __webpack_require__(851);\n\nvar throttleUtil = __webpack_require__(876);\n\nvar modelUtil = __webpack_require__(811);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 931:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(808);\n\nvar BaseAxisPointer = __webpack_require__(930);\n\nvar viewHelper = __webpack_require__(887);\n\nvar cartesianAxisHelper = __webpack_require__(890);\n\nvar AxisView = __webpack_require__(889);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 932:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar modelHelper = __webpack_require__(854);\n\nvar findPointFromSeries = __webpack_require__(885);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 933:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar AxisBuilder = __webpack_require__(888);\n\nvar AxisView = __webpack_require__(889);\n\nvar cartesianAxisHelper = __webpack_require__(890);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 934:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar zrColor = __webpack_require__(853);\n\nvar eventUtil = __webpack_require__(851);\n\nvar env = __webpack_require__(819);\n\nvar formatUtil = __webpack_require__(822);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 935:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 936:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar TooltipContent = __webpack_require__(934);\n\nvar formatUtil = __webpack_require__(822);\n\nvar numberUtil = __webpack_require__(810);\n\nvar graphic = __webpack_require__(808);\n\nvar findPointFromSeries = __webpack_require__(885);\n\nvar layoutUtil = __webpack_require__(845);\n\nvar Model = __webpack_require__(823);\n\nvar globalListener = __webpack_require__(886);\n\nvar axisHelper = __webpack_require__(846);\n\nvar axisPointerViewHelper = __webpack_require__(887);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 937:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 938:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisDefault = __webpack_require__(937);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 939:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Axis = __webpack_require__(891);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 940:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 941:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Cartesian = __webpack_require__(940);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 942:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(893);\n\nvar ComponentModel = __webpack_require__(838);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 943:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(821);\n\nvar bbox = __webpack_require__(902);\n\nvar vec2 = __webpack_require__(812);\n\nvar polygonContain = __webpack_require__(980);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Region = __webpack_require__(943);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 945:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 946:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(912);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(848);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(812);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(794);\n\nvar colorTool = __webpack_require__(853);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(808);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(810);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(822);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(876);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(947);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(855);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(823);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(891);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(819);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(944);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 947:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar createListFromArray = __webpack_require__(883);\n\nvar axisHelper = __webpack_require__(846);\n\nvar axisModelCommonMixin = __webpack_require__(892);\n\nvar Model = __webpack_require__(823);\n\nvar _completeDimensions = __webpack_require__(882);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(875);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 948:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 949:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar Model = __webpack_require__(823);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar globalDefault = __webpack_require__(951);\n\nvar colorPaletteMinin = __webpack_require__(894);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 950:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar ComponentModel = __webpack_require__(838);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 951:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 952:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 953:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 954:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 955:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 956:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(844);\n\nvar graphicUtil = __webpack_require__(808);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 957:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(958);\n\nvar _model = __webpack_require__(811);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 958:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 959:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Scale = __webpack_require__(856);\n\nvar numberUtil = __webpack_require__(810);\n\nvar IntervalScale = __webpack_require__(873);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 960:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Scale = __webpack_require__(856);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 961:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar numberUtil = __webpack_require__(810);\n\nvar formatUtil = __webpack_require__(822);\n\nvar scaleHelper = __webpack_require__(895);\n\nvar IntervalScale = __webpack_require__(873);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 962:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(858);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 963:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(879);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 969:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar vec2 = __webpack_require__(812);\n\nvar Draggable = __webpack_require__(1001);\n\nvar Eventful = __webpack_require__(852);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 970:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar _config = __webpack_require__(857);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(907);\n\nvar Pattern = __webpack_require__(906);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 971:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(857);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(794);\n\nvar log = __webpack_require__(904);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar timsort = __webpack_require__(877);\n\nvar Layer = __webpack_require__(970);\n\nvar requestAnimationFrame = __webpack_require__(898);\n\nvar Image = __webpack_require__(905);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 972:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar Group = __webpack_require__(858);\n\nvar timsort = __webpack_require__(877);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 973:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar _event = __webpack_require__(851);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(898);\n\nvar Animator = __webpack_require__(897);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 974:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(975);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(899);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(847);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(859);\n\nvar line = __webpack_require__(978);\n\nvar cubic = __webpack_require__(977);\n\nvar quadratic = __webpack_require__(981);\n\nvar arc = __webpack_require__(976);\n\nvar _util = __webpack_require__(899);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(847);\n\nvar windingLine = __webpack_require__(900);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(900);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(847);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(851);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(851);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(794);\n\nvar Eventful = __webpack_require__(852);\n\nvar env = __webpack_require__(819);\n\nvar GestureMgr = __webpack_require__(982);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Gradient = __webpack_require__(879);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Gradient = __webpack_require__(879);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar textHelper = __webpack_require__(910);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(910);\n\nvar BoundingRect = __webpack_require__(821);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar vec2 = __webpack_require__(812);\n\nvar _curve = __webpack_require__(847);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar polyHelper = __webpack_require__(908);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar polyHelper = __webpack_require__(908);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar roundRectHelper = __webpack_require__(909);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar fixClipWithShadow = __webpack_require__(916);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/143.535ba657c2bb89c7d45c.js","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1000\n// module chunks = 1 2 3 141 142 143 144 145","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1001\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1002\n// module chunks = 1 2 3 141 142 143 144 145","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1003\n// module chunks = 1 2 3 141 142 143 144 145","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 1005\n// module chunks = 1 2 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 1006\n// module chunks = 1 2 141 142 143 144 145","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 1007\n// module chunks = 1 2 141 142 143 144 145","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 1008\n// module chunks = 1 2 141 142 143 144 145","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 1009\n// module chunks = 1 2 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 1016\n// module chunks = 1 2 141 142 143 144 145","<template>\r\n    <!-- 各镇街排名 -->\r\n    <div class=\"wrap-div\" ref=\"wrapHeight\">\r\n        <div ref=\"bar_chart\" class=\"bar-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\n    const echarts = require('echarts/lib/echarts');\r\n    require('echarts/lib/chart/bar');\r\n    require('echarts/lib/component/tooltip');\r\n    export default {\r\n        data(){\r\n            return {\r\n                regionnameData:['狮山镇','里水镇','大沥镇','罗村街道','丹灶镇','桂城街道','西樵镇','九江镇'],\r\n                regionData:[],\r\n                wrapHeight: 183,\r\n                wrapWidth: 366,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init();\r\n        },\r\n        methods: {\r\n            init() {\r\n                this.getlist();\r\n                this.getDivHeight();\r\n            },\r\n            getDivHeight(){\r\n                this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\r\n                this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\r\n            },\r\n\r\n            //获取数据\r\n            getlist(){\r\n                let tempData = [];\r\n                let dataI = [];\r\n                let a = 0;\r\n                let b = 0\r\n                this.regionData = [],\r\n                this.getAjax('/mktmfc/forms/getarearanking')\r\n                .then((result)=>{\r\n                    if(result.status === 200){\r\n                        tempData = result.data.clientOrderAreaSum;\r\n                        if(tempData.length === 0){\r\n                            this.regionData = [0,0,0,0,0,0,0,0]\r\n                        }else {\r\n                            if(this.regionnameData.length > tempData.length){\r\n                                a = this.regionnameData.length;\r\n                                b = tempData.length;\r\n                            }else {\r\n                                a = tempData.length;\r\n                                b = this.regionnameData.length;\r\n                            }\r\n                            for(let i=0; i<a; i++){\r\n                                var isEquals=false;\r\n                                for(let j=0; j<b; j++){\r\n                                    if(this.regionnameData[i] === tempData[j].buildsite){\r\n                                        isEquals=true;\r\n                                        dataI.push({name:this.regionnameData[i],qty:tempData[j].qtyorder})\r\n                                    }\r\n                                }\r\n                                if(!isEquals){\r\n                                    dataI.push({name:this.regionnameData[i],qty:0});\r\n                                }\r\n                            }\r\n\r\n                            for(let i=0; i<dataI.length; i++){\r\n                                this.regionData.push(dataI[i].qty)\r\n                            }\r\n                        }\r\n                        //console.log(456,this.regionData)\r\n                        //console.log(456,this.reduceObj(this.regionData,'name'))\r\n                    }else {\r\n                        this.$message({\r\n                            message:this.returnIntercept(result),\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                })\r\n                .then(()=>{\r\n                    this.initEchart();\r\n                    this.setEchart(this.regionData);\r\n                })\r\n                \r\n            },\r\n\r\n            initEchart(){\r\n                this.bar_chart = echarts.init(this.$refs.bar_chart);\r\n            },\r\n\r\n            setEchart(regionData) {\r\n                this.bar_chart.setOption({\r\n                    tooltip : {\r\n                        trigger: 'axis',\r\n                        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                        }\r\n                    },\r\n                    // legend: {\r\n                    //     data:['本月','上月'],\r\n                    //     right: '7%',\r\n                    // },\r\n                    grid: {\r\n                        left: '16%',\r\n                        height:'60%',\r\n                        width:'75%',\r\n                        bottom: '20%'\r\n                    },\r\n                    xAxis : [\r\n                        {\r\n                            type: 'category',\r\n                            name:'',\r\n                            // axisTick: {\r\n                            //     alignWithLabel: true\r\n                            // },\r\n                            data:['狮山','里水','大沥','罗村','丹灶','桂城','西樵','九江']\r\n                        }\r\n                    ],\r\n                    yAxis : [\r\n                        {   \r\n                            name: '',\r\n                            type: 'value',\r\n                        },\r\n                    ],\r\n                    series : [\r\n                        {\r\n                            name:'方量',\r\n                            type:'bar',\r\n                            barWidth: '20%',\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: '#fbb8a1'\r\n                                }\r\n                            },\r\n                            label: {\r\n                                normal: {\r\n                                    show: true,\r\n                                    position: 'top'\r\n                                }\r\n                            },\r\n                            data:regionData\r\n                        },\r\n                    ]\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\" scoped type=\"text/less\">\r\n    .wrap-div {\r\n        height: 100%;\r\n    }\r\n    .bar-chart {\r\n        /*width: 510px;*/\r\n        /*height: 238px;*/\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// street_ranking.vue?650ff338","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".wrap-div[data-v-55a2b4da]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_report/report_block/street_ranking.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"street_ranking.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-55a2b4da] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-55a2b4da] {\\n  /*width: 510px;*/\\n  /*height: 238px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-55a2b4da\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_report/report_block/street_ranking.vue\n// module id = 1334\n// module chunks = 143","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-55a2b4da\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./street_ranking.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"07e609a6\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-55a2b4da\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_report/report_block/street_ranking.vue\n// module id = 1465\n// module chunks = 143","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-55a2b4da\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./street_ranking.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./street_ranking.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-55a2b4da\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./street_ranking.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-55a2b4da\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/erp_pc/erp_report/report_block/street_ranking.vue\n// module id = 1560\n// module chunks = 143","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [_c('div', {\n    ref: \"bar_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-55a2b4da\",\"hasScoped\":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/page/erp_pc/erp_report/report_block/street_ranking.vue\n// module id = 1660\n// module chunks = 143","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 794\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 808\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 809\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 810\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 811\n// module chunks = 1 2 3 141 142 143 144 145","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 812\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 813\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 819\n// module chunks = 1 2 3 141 142 143 144 145","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 820\n// module chunks = 1 2 3 141 142 143 144 145","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 821\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 822\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 823\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 824\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 838\n// module chunks = 1 2 3 141 142 143 144 145","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 844\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 845\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 846\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 847\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 848\n// module chunks = 1 2 3 141 142 143 144 145","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 851\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 852\n// module chunks = 1 2 3 141 142 143 144 145","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 853\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 854\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 855\n// module chunks = 1 2 3 141 142 143 144 145","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 856\n// module chunks = 1 2 3 141 142 143 144 145","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 857\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 858\n// module chunks = 1 2 3 141 142 143 144 145","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 859\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 860\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 868\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 869\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 872\n// module chunks = 1 2 3 141 142 143 144 145","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 873\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 874\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 875\n// module chunks = 1 2 3 141 142 143 144 145","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 876\n// module chunks = 1 2 3 141 142 143 144 145","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 877\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 878\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 879\n// module chunks = 1 2 3 141 142 143 144 145","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 880\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 881\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 882\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 883\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 884\n// module chunks = 1 2 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 885\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 886\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 887\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 888\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 889\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 890\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 891\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 892\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 893\n// module chunks = 1 2 3 141 142 143 144 145","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 894\n// module chunks = 1 2 3 141 142 143 144 145","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 895\n// module chunks = 1 2 3 141 142 143 144 145","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 896\n// module chunks = 1 2 3 141 142 143 144 145","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 897\n// module chunks = 1 2 3 141 142 143 144 145","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 898\n// module chunks = 1 2 3 141 142 143 144 145","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 899\n// module chunks = 1 2 3 141 142 143 144 145","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 900\n// module chunks = 1 2 3 141 142 143 144 145","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 901\n// module chunks = 1 2 3 141 142 143 144 145","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 902\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 903\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 904\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 905\n// module chunks = 1 2 3 141 142 143 144 145","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 906\n// module chunks = 1 2 3 141 142 143 144 145","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 907\n// module chunks = 1 2 3 141 142 143 144 145","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 908\n// module chunks = 1 2 3 141 142 143 144 145","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 909\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 910\n// module chunks = 1 2 3 141 142 143 144 145","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 911\n// module chunks = 1 2 3 141 142 143 144 145","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 912\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 915\n// module chunks = 1 2 3 141 142 143 144 145","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 916\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 917\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 925\n// module chunks = 1 2 3 141 142 143 144 145","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 926\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 927\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 928\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 929\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 930\n// module chunks = 1 2 3 141 142 143 144 145","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 931\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 932\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 933\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 934\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 935\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 936\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 937\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 938\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 939\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 940\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 941\n// module chunks = 1 2 3 141 142 143 144 145","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 942\n// module chunks = 1 2 3 141 142 143 144 145","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 943\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 944\n// module chunks = 1 2 3 141 142 143 144 145","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 945\n// module chunks = 1 2 3 141 142 143 144 145","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 946\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 947\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 948\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 949\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 950\n// module chunks = 1 2 3 141 142 143 144 145","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 951\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 952\n// module chunks = 1 2 3 141 142 143 144 145","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 953\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 954\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 955\n// module chunks = 1 2 3 141 142 143 144 145","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 956\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 957\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 958\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 959\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 960\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 961\n// module chunks = 1 2 3 141 142 143 144 145","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 962\n// module chunks = 1 2 3 141 142 143 144 145","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 963\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 969\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 970\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 971\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 972\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 973\n// module chunks = 1 2 3 141 142 143 144 145","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 974\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 975\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 976\n// module chunks = 1 2 3 141 142 143 144 145","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 977\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 978\n// module chunks = 1 2 3 141 142 143 144 145","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 979\n// module chunks = 1 2 3 141 142 143 144 145","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 980\n// module chunks = 1 2 3 141 142 143 144 145","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 981\n// module chunks = 1 2 3 141 142 143 144 145","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 982\n// module chunks = 1 2 3 141 142 143 144 145","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 983\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 984\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 985\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 986\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 987\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 988\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 989\n// module chunks = 1 2 3 141 142 143 144 145","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 990\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 991\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 992\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 993\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 994\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 995\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 996\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 997\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 998\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 999\n// module chunks = 1 2 3 141 142 143 144 145"],"sourceRoot":""}