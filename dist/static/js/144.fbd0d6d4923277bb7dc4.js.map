{"version":3,"sources":["webpack:///static/js/144.fbd0d6d4923277bb7dc4.js","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb*****","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca*****","webpack:///./~/zrender/lib/tool/path.js?dc4b*****","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2*****","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd****","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc****","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5****","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9****","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2****","webpack:///./~/echarts/lib/layout/barGrid.js?d23e****","webpack:///project_type.vue","webpack:///./src/page/erp_pc/erp_report/report_block/project_type.vue?1777","webpack:///./src/page/erp_pc/erp_report/report_block/project_type.vue?049e","webpack:///./src/page/erp_pc/erp_report/report_block/project_type.vue","webpack:///./src/page/erp_pc/erp_report/report_block/project_type.vue?ce64","webpack:///./~/zrender/lib/core/util.js?10f4*****","webpack:///./~/echarts/lib/util/graphic.js?e267*****","webpack:///./~/echarts/lib/echarts.js?68a2*****","webpack:///./~/echarts/lib/util/number.js?43e3*****","webpack:///./~/echarts/lib/util/model.js?e2bd*****","webpack:///./~/zrender/lib/core/vector.js?6654*****","webpack:///./~/zrender/lib/graphic/Path.js?c119*****","webpack:///./~/zrender/lib/core/env.js?9ccc*****","webpack:///./~/echarts/lib/config.js?2f63*****","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6*****","webpack:///./~/echarts/lib/util/format.js?7f72*****","webpack:///./~/echarts/lib/model/Model.js?f4df*****","webpack:///./~/echarts/lib/util/clazz.js?3e66*****","webpack:///./~/echarts/lib/model/Component.js?0e02*****","webpack:///./~/zrender/lib/contain/text.js?3a43*****","webpack:///./~/echarts/lib/util/layout.js?2b1e*****","webpack:///./~/echarts/lib/coord/axisHelper.js?4730*****","webpack:///./~/zrender/lib/core/curve.js?9511*****","webpack:///./~/zrender/lib/core/matrix.js?97a2*****","webpack:///./~/zrender/lib/core/event.js?24ff*****","webpack:///./~/zrender/lib/mixin/Eventful.js?223b*****","webpack:///./~/zrender/lib/tool/color.js?284f*****","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01*****","webpack:///./~/echarts/lib/data/List.js?b096*****","webpack:///./~/echarts/lib/scale/Scale.js?c922*****","webpack:///./~/zrender/lib/config.js?2861*****","webpack:///./~/zrender/lib/container/Group.js?8d57*****","webpack:///./~/zrender/lib/core/PathProxy.js?69e9*****","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1*****","webpack:///./~/echarts/lib/model/Series.js?186c*****","webpack:///./~/echarts/lib/view/Chart.js?72f3*****","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30*****","webpack:///./~/echarts/lib/scale/Interval.js?08e9*****","webpack:///./~/echarts/lib/util/component.js?cc72*****","webpack:///./~/echarts/lib/util/symbol.js?be2c*****","webpack:///./~/echarts/lib/util/throttle.js?56b3*****","webpack:///./~/zrender/lib/core/timsort.js?0a74*****","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45*****","webpack:///./~/zrender/lib/graphic/Gradient.js?5165*****","webpack:///./~/zrender/lib/graphic/helper/image.js?8535*****","webpack:///./~/echarts/lib/component/tooltip.js?b491*****","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e*****","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc*****","webpack:///./~/echarts/lib/chart/bar.js?931c****","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189*****","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf*****","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0*****","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417*****","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854*****","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88*****","webpack:///./~/echarts/lib/coord/Axis.js?736c*****","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0*****","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573*****","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454*****","webpack:///./~/echarts/lib/scale/helper.js?370b*****","webpack:///./~/zrender/lib/Element.js?325b*****","webpack:///./~/zrender/lib/animation/Animator.js?d2b9*****","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88*****","webpack:///./~/zrender/lib/contain/util.js?0031*****","webpack:///./~/zrender/lib/contain/windingLine.js?625a*****","webpack:///./~/zrender/lib/core/LRU.js?018e*****","webpack:///./~/zrender/lib/core/bbox.js?1b56*****","webpack:///./~/zrender/lib/core/guid.js?f0e4*****","webpack:///./~/zrender/lib/core/log.js?26a2*****","webpack:///./~/zrender/lib/graphic/Image.js?bf1b*****","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e*****","webpack:///./~/zrender/lib/graphic/Style.js?22d9*****","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c*****","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d*****","webpack:///./~/zrender/lib/graphic/helper/text.js?069c*****","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b*****","webpack:///./~/zrender/lib/zrender.js?5dcd*****","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167*****","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4*****","webpack:///./~/echarts/lib/component/gridSimple.js?eec5*****","webpack:///./~/echarts/lib/ExtensionAPI.js?e283*****","webpack:///./~/echarts/lib/component/axis.js?8a87*****","webpack:///./~/echarts/lib/component/axisPointer.js?110d*****","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a*****","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293*****","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a*****","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e*****","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8*****","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a*****","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54*****","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac*****","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52*****","webpack:///./~/echarts/lib/coord/axisDefault.js?4492*****","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4*****","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345*****","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246*****","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b*****","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817*****","webpack:///./~/echarts/lib/coord/geo/Region.js?fc66*****","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js?edf7*****","webpack:///./~/echarts/lib/data/DataDiffer.js?f330*****","webpack:///./~/echarts/lib/export.js?1f28*****","webpack:///./~/echarts/lib/helper.js?5794*****","webpack:///./~/echarts/lib/loading/default.js?8a5f*****","webpack:///./~/echarts/lib/model/Global.js?b9d3*****","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5*****","webpack:///./~/echarts/lib/model/globalDefault.js?fd54*****","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41*****","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7*****","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011*****","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579*****","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8*****","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171*****","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6*****","webpack:///./~/echarts/lib/scale/Log.js?0ad0*****","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b*****","webpack:///./~/echarts/lib/scale/Time.js?6fdf*****","webpack:///./~/echarts/lib/view/Component.js?415a*****","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a*****","webpack:///./~/zrender/lib/Handler.js?fbeb*****","webpack:///./~/zrender/lib/Layer.js?f586*****","webpack:///./~/zrender/lib/Painter.js?ee99*****","webpack:///./~/zrender/lib/Storage.js?7e93*****","webpack:///./~/zrender/lib/animation/Animation.js?8743*****","webpack:///./~/zrender/lib/animation/Clip.js?fef9*****","webpack:///./~/zrender/lib/animation/easing.js?64b6*****","webpack:///./~/zrender/lib/contain/arc.js?7367*****","webpack:///./~/zrender/lib/contain/cubic.js?b90e*****","webpack:///./~/zrender/lib/contain/line.js?4326*****","webpack:///./~/zrender/lib/contain/path.js?2e7f*****","webpack:///./~/zrender/lib/contain/polygon.js?1f9f*****","webpack:///./~/zrender/lib/contain/quadratic.js?f589*****","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd*****","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7*****","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636*****","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250*****","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e*****","webpack:///./~/zrender/lib/graphic/Text.js?3244*****","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713*****","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c*****","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea*****","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994*****","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4*****","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e*****","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728*****","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d*****","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb*****","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d*****","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c*****","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767*****"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","Animator","log","_util","isString","isFunction","isObject","isArrayLike","indexOf","Animatable","this","animators","prototype","constructor","animate","path","loop","target","animatingShape","el","zr","__zr","pathSplitted","split","prop","i","l","length","id","animator","during","dirty","done","splice","push","animation","addAnimator","stopAnimation","forwardToLast","len","stop","animateTo","time","delay","easing","callback","forceAnimate","count","_animateToShallow","slice","start","source","objShallow","propertyCount","name","hasOwnProperty","props","attr","when","_default","1001","Draggable","on","_dragStart","_drag","_dragEnd","param","e","topTarget","draggingTarget","draggable","_draggingTarget","dragging","_x","offsetX","_y","offsetY","dispatchToElement","event","x","y","dx","dy","drift","dropTarget","findHover","lastDropTarget","_dropTarget","1002","processArc","x1","y1","x2","y2","fa","fs","rx","ry","psiDeg","cmd","psi","PI","xp","mathCos","mathSin","yp","lambda","mathSqrt","f","cxp","cyp","cx","cy","theta","vAngle","u","v","dTheta","vRatio","addData","createPathProxyFromString","data","n","cs","replace","cc","RegExp","prevCmd","arr","cpx","cpy","PathProxy","CMD","str","c","charAt","off","p","shift","parseFloat","isNaN","ctlPtx","ctlPty","L","M","C","pathData","Q","A","Z","toStatic","createPathOptions","opts","pathProxy","buildPath","setData","ctx","getContext","rebuildPath","applyTransform","m","transformPath","createFromString","Path","extendFromString","extend","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","shape","pathBundle","appendPath","Math","sqrt","sin","cos","vMag","acos","1003","nPoint","j","k","R","sx","sy","angle","mathAtan2","v2ApplyTransform","points","_vector","atan2","1005","BaseBarSeries","type","dependencies","brushSelector","1006","removeRect","dataIndex","animationModel","style","text","graphic","updateProps","width","parent","remove","removeSector","r","r0","updateStyle","itemModel","layout","seriesModel","isHorizontal","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","get","useStyle","zrUtil","defaults","fill","cursorStyle","getShallow","labelPositionOutside","height","setLabel","setHoverStyle","getLineWidth","rawLayout","lineWidth","BAR_BORDER_WIDTH_QUERY","min","abs","_config","echarts","__DEV__","_helper","Model","barItemStyle","extendChartView","render","ecModel","api","coordinateSystemType","_render","group","dispose","noop","isHorizontalOrRadial","getData","oldData","_data","coord","coordinateSystem","baseAxis","getBaseAxis","dim","isAnimationEnabled","diff","add","hasValue","getItemModel","getLayout","elementCreator","setItemGraphicEl","update","newIndex","oldIndex","getItemGraphicEl","execute","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","polar","isRadial","sector","Sector","sectorShape","startAngle","getItemLayout","fixedLineWidth","signX","signY","endAngle","1007","SeriesModel","createListFromArray","getInitialData","option","getMarkerPosition","value","coordSys","pt","dataToPoint","offset","size","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","itemStyle","1008","makeStyleMapper","excludes","getBorderLineDash","lineDash","1009","normalStyle","labelModel","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getRawValue","isRectText","autoColor","fixPosition","textPosition","1016","getSeriesStackId","STACK_PREFIX","seriesIndex","getAxisKey","axis","index","getLayoutOnAxis","opt","params","bandWidth","getBandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","result","item","offsetCenter","calBarWidthAndOffset","barSeries","map","cartesian","axisExtent","getExtent","barWidth","parsePercent","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","each","seriesInfo","idx","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","gap","stacks","maxWidth","coordSysName","barGapPercent","autoWidth","max","column","stack","lastColumn","widthSum","barLayoutGrid","seriesType","barWidthAndOffset","filter","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","eachSeriesByType","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","valueAxisStart","onZero","toGlobalCoord","dataToCoord","getGlobalExtent","coordDims","coordDimToDataDim","coords","mapArray","setLayout","sign","lastCoord","lastCoordOrigin","setItemLayout","_number","1234","__webpack_exports__","Object","defineProperty","projecttypeData","projectqtyData","wrapHeight","wrapWidth","mounted","init","watch","$store.state.regionName","methods","getlist","getDivHeight","$refs","offsetHeight","offsetWidth","_this","tempData","dataI","area","$store","state","regionName","getAjax","then","status","projectTypeRanking","projecttype","projectname","qty","_i","$message","message","returnIntercept","initEchart","setEchart","bar_chart","setOption","tooltip","trigger","axisPointer","grid","left","bottom","xAxis","yAxis","series","normal","label","show","position","1297","version","sources","names","mappings","file","sourcesContent","sourceRoot","1428","content","locals","1556","injectStyle","ssrContext","Component","1614","_vm","_h","$createElement","_c","_self","ref","staticClass","staticRenderFns","794","$override","fn","clone","typeStr","objToString","call","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","merge","overwrite","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","overlay","_ctx","createCanvas","array","inherits","clazz","baseClazz","F","clazzPrototype","superClass","mixin","obj","cb","context","forEach","nativeForEach","nativeMap","reduce","memo","nativeReduce","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","createElement","prefixedKey","removeKey","808","extendShape","extendPath","pathTool","makePath","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","Image","image","onload","img","setStyle","aspect","pathRect","calculateTransform","subPixelOptimizeLine","round","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","colorTool","lift","cacheElementStl","__hoverStlDirty","stroke","__hoverStl","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","normalStyleText","emphasisStyleText","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textOffset","labelRotate","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","animatableModel","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","transform","invert","Transformable","vector","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Group","Text","Circle","Ring","Polygon","Polyline","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","809","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","_dom","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","methodName","finder","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","component","componentModel","updateZ","eachSeries","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","processData","process","stackSeriesData","stackedDataMap","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","GlobalModel","OptionManager","_throttle","seriesColor","loadingDefault","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","one","echartsProto","getDom","getZr","notMerge","lazyUpdate","optionManager","setTheme","console","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","Infinity","top","right","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","getDataParams","dataType","eventData","_disposed","clear","Date","disconnect","dataTool","___ec_export","810","_trim","linearMap","domain","range","clamp","subDomain","subRange","percent","all","match","precision","returnStr","toFixed","asc","sort","getPrecision","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","MAX_SAFE_INTEGER","811","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","createDataFormatModel","dataFormatMixin","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","has","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","rawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesName","marker","getTooltipMarker","$vars","labelProp","formatter","formatTpl","formatTooltip","makeGetter","hostObj","812","out","ArrayCtor","copy","v1","v2","scaleAndAdd","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","813","Displayable","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","strokeContainThreshold","brush","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","restoreTransform","drawRectText","shapeCfg","inBundle","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","attrKV","Sub","defaultShape","thisShape","819","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","820","global","dev","821","vec2","union","other","lt","rb","lb","rt","maxX","maxY","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","822","addCommas","toCamelCase","upperCaseFirst","group1","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","823","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","824","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","838","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","844","font","DEFAULT_FONT","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","containerWidth","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","845","boxLayout","orient","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","newParams","newValueCount","merged","mergedValueCount","hasProp","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","box","vbox","hbox","846","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","847","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","B","t1","disc","K","t2","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","848","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","851","clientToLocal","calculate","defaultGetZrXY","layerX","zrX","zrY","layerY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","852","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","853","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","G","vMin","vMax","delta","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","854","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","855","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","856","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","end","thisExtent","_isBlank","857","debugMode","858","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","invisible","childRect","859","curve","bbox","min2","max2","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","anticlockwise","arcTo","radius","closePath","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","fromArc","ux","uy","scaleX","scaleY","isEllipse","860","includes","868","_format","_clazz","colorPaletteMixin","legendDataProvider","visualColorAccessPath","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","869","Chart","elSetState","toggleHighlight","dataIdx","highlight","downplay","chartProto","872","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","873","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","874","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","875","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","proxySymbol","876","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","877","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","878","Style","__clipPaths","RectText","culling","cursor","afterBrush","rectContain","animateStyle","879","Gradient","addColorStop","880","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","881","882","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","883","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","884","885","886","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","887","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","clockwise","888","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","_symbol","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","rawTick","889","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointerClazz","registerAxisPointerClass","890","gridModel","rawAxisPosition","axisPosition","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","labelInside","getLabelInterval","891","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","getLabelsCoords","getRotate","892","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","893","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","894","colorIdx","colorNameMap","colorPalette","895","fixExtent","896","guid","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","removeAnimator","897","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","clipList","removeClip","getClips","898","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","899","normalizeRadian","PI2","900","windingLine","dir","901","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","902","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","903","idStart","904","905","ZImage","_image","sWidth","sHeight","drawImage","906","repeat","createPattern","907","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","908","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","909","r1","r2","r3","r4","total","910","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","911","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","transformCoordToGlobal","912","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","915","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","grids","916","orignalBrush","modified","clipPaths","shadowTemp","917","getItemStyle","925","chartInstance","echartsAPIList","926","927","axisTrigger","link","928","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","929","globalListener","AxisPointerView","930","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","931","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","elStyle","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","932","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","933","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","prevX","prevY","areaInterval","areaStyle","934","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","zrColor","borderName","camelCase","TooltipContent","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","935","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","936","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","937","nameRotate","nameTruncate","nameTextStyle","nameGap","symbolSize","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","categoryAxis","timeAxis","logAxis","logBase","938","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","939","coordExtent","940","dimAxisMapper","_axes","Cartesian","_dimList","getAxesByScale","_dataCoordConvert","input","dimList","output","941","axisX","axisY","942","containLabel","943","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","944","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","polygon","featureObj","region","945","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","946","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","947","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","948","maskColor","mask","labelRect","949","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","950","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","951","platform","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","952","953","954","lineType","955","getLineDash","dotSize","dashSize","956","graphicUtil","PATH_COLOR","957","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","958","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","959","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","960","rank","961","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","962","componentProto","963","encodeColor","colorAccessPath","969","makeEventPacket","eveType","targetInfo","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","970","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","971","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","viewportRoot","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","972","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","973","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","974","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","975","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","976","_l","977","978","_a","_b","979","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","980","981","_curve","982","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","983","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","984","paths","_updatePathDirty","985","globalCoord","986","987","textHelper","988","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","989","interpolate","segs","w2","w3","990","991","unitX","unitY","992","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","993","994","995","polyHelper","996","997","998","999","fixClipWithShadow"],"mappings":"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","file":"static/js/144.fbd0d6d4923277bb7dc4.js","sourcesContent":["webpackJsonp([144],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(897);\n\nvar log = __webpack_require__(904);\n\nvar _util = __webpack_require__(794);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar PathProxy = __webpack_require__(859);\n\nvar transformPath = __webpack_require__(1003);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(859);\n\nvar _vector = __webpack_require__(812);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(1007);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar _helper = __webpack_require__(1009);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(823);\n\nvar barItemStyle = __webpack_require__(1008);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(868);\n\nvar createListFromArray = __webpack_require__(883);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(808);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1234:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n\nvar echarts = __webpack_require__(809);\n__webpack_require__(884);\n__webpack_require__(881);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            projecttypeData: [],\n            projectqtyData: [],\n            wrapHeight: 183,\n            wrapWidth: 366\n        };\n    },\n    mounted: function mounted() {\n        this.init();\n    },\n\n    watch: {\n        '$store.state.regionName': 'getlist'\n    },\n    methods: {\n        init: function init() {\n            this.getlist();\n            this.getDivHeight();\n        },\n        getDivHeight: function getDivHeight() {\n            this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\n            this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\n        },\n\n\n        //获取数据   工程类型：1-房屋建筑，2-铁路工程，3-公路，4-水利，5-其他\n        getlist: function getlist() {\n            var _this = this;\n\n            var tempData = [];\n            this.projecttypeData = [];\n            this.projectqtyData = [];\n            var dataI = [];\n            var area = this.$store.state.regionName;\n            this.getAjax('/mktmfc/forms/getprojecttyperanking?area=' + area).then(function (result) {\n                if (result.status === 200) {\n                    tempData = result.data.projectTypeRanking;\n                    if (tempData.length === 0) {\n                        _this.projecttypeData = ['房屋建筑', '铁路工程', '公路工程', '水利工程', '其他工程'];\n                        _this.projectqtyData = [0, 0, 0, 0, 0];\n                    } else {\n                        for (var i = 0; i < tempData.length; i++) {\n                            if (tempData[i].projecttype === 1) {\n                                tempData[i].projectname = '房屋建筑';\n                            } else if (tempData[i].projecttype === 2) {\n                                tempData[i].projectname = '铁路工程';\n                            } else if (tempData[i].projecttype === 3) {\n                                tempData[i].projectname = '公路工程';\n                            } else if (tempData[i].projecttype === 4) {\n                                tempData[i].projectname = '水利工程';\n                            } else if (tempData[i].projecttype === 5) {\n                                tempData[i].projectname = '其他工程';\n                            }\n\n                            dataI.push({ name: tempData[i].projectname, qty: tempData[i].qty });\n                        }\n\n                        for (var _i = 0; _i < dataI.length; _i++) {\n                            _this.projecttypeData.push(dataI[_i].name);\n                            _this.projectqtyData.push(dataI[_i].qty);\n                        }\n                    }\n                } else {\n                    _this.$message({\n                        message: _this.returnIntercept(result),\n                        type: 'error'\n                    });\n                }\n            }).then(function () {\n                _this.initEchart();\n                _this.setEchart(_this.projecttypeData, _this.projectqtyData);\n            });\n        },\n        initEchart: function initEchart() {\n            this.bar_chart = echarts.init(this.$refs.bar_chart);\n        },\n        setEchart: function setEchart(projecttypeData, projectqtyData) {\n            this.bar_chart.setOption({\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n                    }\n                },\n                // legend: {\n                //     data:['本月','上月'],\n                //     right: '7%',\n                // },\n                grid: {\n                    left: '20%',\n                    height: '70%',\n                    width: '75%',\n                    bottom: '20%'\n                },\n                xAxis: [{\n                    type: 'value',\n                    name: ''\n                }],\n                yAxis: [{\n                    type: 'category',\n                    name: '',\n                    // axisTick: {\n                    //     alignWithLabel: true\n                    // },\n                    data: projecttypeData\n                }],\n                series: [{\n                    name: '方量',\n                    type: 'bar',\n                    barWidth: '20%',\n                    itemStyle: {\n                        normal: {\n                            color: '#6fbae1'\n                        }\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'right'\n                        }\n                    },\n                    data: projectqtyData\n                }]\n            });\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 1297:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(656)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".wrap-div[data-v-3210390e]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_report/report_block/project_type.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"project_type.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-3210390e] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-3210390e] {\\n  /*width: 510px;*/\\n  /*height: 238px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1428:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1297);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(657)(\"0d27260d\", content, true, {});\n\n/***/ }),\n\n/***/ 1556:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(1428)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(1234),\n  /* template */\n  __webpack_require__(1614),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-3210390e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1614:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [_c('div', {\n    ref: \"bar_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 808:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar pathTool = __webpack_require__(1002);\n\nvar colorTool = __webpack_require__(853);\n\nvar matrix = __webpack_require__(848);\n\nvar vector = __webpack_require__(812);\n\nvar Path = __webpack_require__(813);\n\nvar Transformable = __webpack_require__(911);\n\nvar Image = __webpack_require__(905);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(858);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(987);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(993);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(999);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(998);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(995);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(996);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(997);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(994);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(992);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(991);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(984);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(985);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(986);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(821);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 809:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(912);\n\nvar zrUtil = __webpack_require__(794);\n\nvar colorTool = __webpack_require__(853);\n\nvar env = __webpack_require__(819);\n\nvar timsort = __webpack_require__(877);\n\nvar Eventful = __webpack_require__(852);\n\nvar GlobalModel = __webpack_require__(949);\n\nvar ExtensionAPI = __webpack_require__(925);\n\nvar CoordinateSystemManager = __webpack_require__(872);\n\nvar OptionManager = __webpack_require__(950);\n\nvar backwardCompat = __webpack_require__(957);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar SeriesModel = __webpack_require__(868);\n\nvar ComponentView = __webpack_require__(962);\n\nvar ChartView = __webpack_require__(869);\n\nvar graphic = __webpack_require__(808);\n\nvar modelUtil = __webpack_require__(811);\n\nvar _throttle = __webpack_require__(876);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(963);\n\nvar loadingDefault = __webpack_require__(948);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(946);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 810:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar formatUtil = __webpack_require__(822);\n\nvar nubmerUtil = __webpack_require__(810);\n\nvar Model = __webpack_require__(823);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 812:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 813:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar zrUtil = __webpack_require__(794);\n\nvar PathProxy = __webpack_require__(859);\n\nvar pathContain = __webpack_require__(979);\n\nvar Pattern = __webpack_require__(906);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 819:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 820:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 821:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(812);\n\nvar matrix = __webpack_require__(848);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 822:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar numberUtil = __webpack_require__(810);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 823:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar lineStyleMixin = __webpack_require__(955);\n\nvar areaStyleMixin = __webpack_require__(952);\n\nvar textStyleMixin = __webpack_require__(956);\n\nvar itemStyleMixin = __webpack_require__(954);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 824:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 838:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar layout = __webpack_require__(845);\n\nvar boxLayoutMixin = __webpack_require__(953);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 844:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(821);\n\nvar imageHelper = __webpack_require__(880);\n\nvar _util = __webpack_require__(794);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 845:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _number = __webpack_require__(810);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(822);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 846:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar OrdinalScale = __webpack_require__(960);\n\nvar IntervalScale = __webpack_require__(873);\n\nvar Scale = __webpack_require__(856);\n\nvar numberUtil = __webpack_require__(810);\n\n__webpack_require__(961);\n\n__webpack_require__(959);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 847:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 848:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 851:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(852);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(819);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 852:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 853:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(901);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 854:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 855:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar Model = __webpack_require__(823);\n\nvar DataDiffer = __webpack_require__(945);\n\nvar modelUtil = __webpack_require__(811);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 856:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(824);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 857:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 858:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Element = __webpack_require__(896);\n\nvar BoundingRect = __webpack_require__(821);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 859:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(847);\n\nvar vec2 = __webpack_require__(812);\n\nvar bbox = __webpack_require__(902);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _config = __webpack_require__(857);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 860:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 868:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar _format = __webpack_require__(822);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(824);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(811);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar colorPaletteMixin = __webpack_require__(894);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 869:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Group = __webpack_require__(858);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar modelUtil = __webpack_require__(811);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 872:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 873:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(810);\n\nvar formatUtil = __webpack_require__(822);\n\nvar Scale = __webpack_require__(856);\n\nvar helper = __webpack_require__(895);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 874:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _clazz = __webpack_require__(824);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 875:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar BoundingRect = __webpack_require__(821);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 876:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 877:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 878:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Style = __webpack_require__(907);\n\nvar Element = __webpack_require__(896);\n\nvar RectText = __webpack_require__(990);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 880:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(901);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 881:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\n__webpack_require__(927);\n\n__webpack_require__(935);\n\n__webpack_require__(936);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 882:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar _model = __webpack_require__(811);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 883:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar List = __webpack_require__(855);\n\nvar completeDimensions = __webpack_require__(882);\n\nvar _model = __webpack_require__(811);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(872);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 884:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar barLayoutGrid = __webpack_require__(1016);\n\n__webpack_require__(915);\n\n__webpack_require__(1005);\n\n__webpack_require__(1006);\n\n__webpack_require__(917);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n\n/***/ 885:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 886:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar modelUtil = __webpack_require__(811);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 887:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar textContain = __webpack_require__(844);\n\nvar formatUtil = __webpack_require__(822);\n\nvar matrix = __webpack_require__(848);\n\nvar axisHelper = __webpack_require__(846);\n\nvar AxisBuilder = __webpack_require__(888);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 888:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(822);\n\nvar graphic = __webpack_require__(808);\n\nvar Model = __webpack_require__(823);\n\nvar _number = __webpack_require__(810);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(875);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(848);\n\nvar _vector = __webpack_require__(812);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 889:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(809);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 890:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 891:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar numberUtil = __webpack_require__(810);\n\nvar axisHelper = __webpack_require__(846);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 892:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisHelper = __webpack_require__(846);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 893:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar axisModelCreator = __webpack_require__(938);\n\nvar axisModelCommonMixin = __webpack_require__(892);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 894:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(824);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 895:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(810);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 896:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(903);\n\nvar Eventful = __webpack_require__(852);\n\nvar Transformable = __webpack_require__(911);\n\nvar Animatable = __webpack_require__(1000);\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 897:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(974);\n\nvar color = __webpack_require__(853);\n\nvar _util = __webpack_require__(794);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 898:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 899:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 900:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 901:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 902:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(812);\n\nvar curve = __webpack_require__(847);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 903:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 904:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(857);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 905:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar zrUtil = __webpack_require__(794);\n\nvar imageHelper = __webpack_require__(880);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 906:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 907:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 908:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(989);\n\nvar smoothBezier = __webpack_require__(988);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 909:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 910:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(844);\n\nvar roundRectHelper = __webpack_require__(909);\n\nvar imageHelper = __webpack_require__(880);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 911:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(848);\n\nvar vector = __webpack_require__(812);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 912:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(903);\n\nvar env = __webpack_require__(819);\n\nvar zrUtil = __webpack_require__(794);\n\nvar Handler = __webpack_require__(969);\n\nvar Storage = __webpack_require__(972);\n\nvar Painter = __webpack_require__(971);\n\nvar Animation = __webpack_require__(973);\n\nvar HandlerProxy = __webpack_require__(983);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 915:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(846);\n\nvar Cartesian2D = __webpack_require__(941);\n\nvar Axis2D = __webpack_require__(939);\n\nvar CoordinateSystem = __webpack_require__(872);\n\n__webpack_require__(942);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(819);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 917:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\n__webpack_require__(915);\n\n__webpack_require__(926);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 925:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 926:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(893);\n\n__webpack_require__(933);\n\n/***/ }),\n\n/***/ 927:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\nvar axisTrigger = __webpack_require__(932);\n\n__webpack_require__(928);\n\n__webpack_require__(929);\n\n__webpack_require__(931);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 928:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 929:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar globalListener = __webpack_require__(886);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 930:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar graphic = __webpack_require__(808);\n\nvar axisPointerModelHelper = __webpack_require__(854);\n\nvar eventTool = __webpack_require__(851);\n\nvar throttleUtil = __webpack_require__(876);\n\nvar modelUtil = __webpack_require__(811);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 931:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(808);\n\nvar BaseAxisPointer = __webpack_require__(930);\n\nvar viewHelper = __webpack_require__(887);\n\nvar cartesianAxisHelper = __webpack_require__(890);\n\nvar AxisView = __webpack_require__(889);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 932:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar modelHelper = __webpack_require__(854);\n\nvar findPointFromSeries = __webpack_require__(885);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 933:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar AxisBuilder = __webpack_require__(888);\n\nvar AxisView = __webpack_require__(889);\n\nvar cartesianAxisHelper = __webpack_require__(890);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 934:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar zrColor = __webpack_require__(853);\n\nvar eventUtil = __webpack_require__(851);\n\nvar env = __webpack_require__(819);\n\nvar formatUtil = __webpack_require__(822);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 935:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 936:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(809);\n\nvar zrUtil = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar TooltipContent = __webpack_require__(934);\n\nvar formatUtil = __webpack_require__(822);\n\nvar numberUtil = __webpack_require__(810);\n\nvar graphic = __webpack_require__(808);\n\nvar findPointFromSeries = __webpack_require__(885);\n\nvar layoutUtil = __webpack_require__(845);\n\nvar Model = __webpack_require__(823);\n\nvar globalListener = __webpack_require__(886);\n\nvar axisHelper = __webpack_require__(846);\n\nvar axisPointerViewHelper = __webpack_require__(887);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 937:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 938:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar axisDefault = __webpack_require__(937);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar _layout = __webpack_require__(845);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 939:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Axis = __webpack_require__(891);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 940:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 941:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Cartesian = __webpack_require__(940);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 942:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(893);\n\nvar ComponentModel = __webpack_require__(838);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 943:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(821);\n\nvar bbox = __webpack_require__(902);\n\nvar vec2 = __webpack_require__(812);\n\nvar polygonContain = __webpack_require__(980);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Region = __webpack_require__(943);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 945:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 946:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(912);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(848);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(812);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(794);\n\nvar colorTool = __webpack_require__(853);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(808);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(810);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(822);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(876);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(947);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(855);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(823);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(891);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(819);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(944);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 947:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar createListFromArray = __webpack_require__(883);\n\nvar axisHelper = __webpack_require__(846);\n\nvar axisModelCommonMixin = __webpack_require__(892);\n\nvar Model = __webpack_require__(823);\n\nvar _completeDimensions = __webpack_require__(882);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(875);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 948:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar graphic = __webpack_require__(808);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 949:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(820);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar Model = __webpack_require__(823);\n\nvar ComponentModel = __webpack_require__(838);\n\nvar globalDefault = __webpack_require__(951);\n\nvar colorPaletteMinin = __webpack_require__(894);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 950:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar ComponentModel = __webpack_require__(838);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 951:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 952:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 953:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 954:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 955:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(860);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 956:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(844);\n\nvar graphicUtil = __webpack_require__(808);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 957:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(794);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(958);\n\nvar _model = __webpack_require__(811);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 958:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar modelUtil = __webpack_require__(811);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 959:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Scale = __webpack_require__(856);\n\nvar numberUtil = __webpack_require__(810);\n\nvar IntervalScale = __webpack_require__(873);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 960:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Scale = __webpack_require__(856);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 961:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar numberUtil = __webpack_require__(810);\n\nvar formatUtil = __webpack_require__(822);\n\nvar scaleHelper = __webpack_require__(895);\n\nvar IntervalScale = __webpack_require__(873);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 962:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(858);\n\nvar componentUtil = __webpack_require__(874);\n\nvar clazzUtil = __webpack_require__(824);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 963:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(879);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 969:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar vec2 = __webpack_require__(812);\n\nvar Draggable = __webpack_require__(1001);\n\nvar Eventful = __webpack_require__(852);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 970:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar _config = __webpack_require__(857);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(907);\n\nvar Pattern = __webpack_require__(906);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 971:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(857);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(794);\n\nvar log = __webpack_require__(904);\n\nvar BoundingRect = __webpack_require__(821);\n\nvar timsort = __webpack_require__(877);\n\nvar Layer = __webpack_require__(970);\n\nvar requestAnimationFrame = __webpack_require__(898);\n\nvar Image = __webpack_require__(905);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 972:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar env = __webpack_require__(819);\n\nvar Group = __webpack_require__(858);\n\nvar timsort = __webpack_require__(877);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 973:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(794);\n\nvar _event = __webpack_require__(851);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(898);\n\nvar Animator = __webpack_require__(897);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 974:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(975);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(899);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(847);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(859);\n\nvar line = __webpack_require__(978);\n\nvar cubic = __webpack_require__(977);\n\nvar quadratic = __webpack_require__(981);\n\nvar arc = __webpack_require__(976);\n\nvar _util = __webpack_require__(899);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(847);\n\nvar windingLine = __webpack_require__(900);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(900);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(847);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(851);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(851);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(794);\n\nvar Eventful = __webpack_require__(852);\n\nvar env = __webpack_require__(819);\n\nvar GestureMgr = __webpack_require__(982);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Gradient = __webpack_require__(879);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(794);\n\nvar Gradient = __webpack_require__(879);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(878);\n\nvar zrUtil = __webpack_require__(794);\n\nvar textContain = __webpack_require__(844);\n\nvar textHelper = __webpack_require__(910);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(812);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(910);\n\nvar BoundingRect = __webpack_require__(821);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar vec2 = __webpack_require__(812);\n\nvar _curve = __webpack_require__(847);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar polyHelper = __webpack_require__(908);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar polyHelper = __webpack_require__(908);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar roundRectHelper = __webpack_require__(909);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(813);\n\nvar fixClipWithShadow = __webpack_require__(916);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/144.fbd0d6d4923277bb7dc4.js","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1000\n// module chunks = 1 2 3 141 142 143 144 145","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1001\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1002\n// module chunks = 1 2 3 141 142 143 144 145","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1003\n// module chunks = 1 2 3 141 142 143 144 145","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 1005\n// module chunks = 1 2 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 1006\n// module chunks = 1 2 141 142 143 144 145","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 1007\n// module chunks = 1 2 141 142 143 144 145","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 1008\n// module chunks = 1 2 141 142 143 144 145","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 1009\n// module chunks = 1 2 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 1016\n// module chunks = 1 2 141 142 143 144 145","<template>\r\n    <!-- 工程类型排行 -->\r\n    <div class=\"wrap-div\" ref=\"wrapHeight\">\r\n        <div ref=\"bar_chart\" class=\"bar-chart\" :style = \"{width:wrapWidth+'px',height:wrapHeight+'px'}\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\n    const echarts = require('echarts/lib/echarts');\r\n    require('echarts/lib/chart/bar');\r\n    require('echarts/lib/component/tooltip');\r\n    export default {\r\n        data(){\r\n            return {\r\n                projecttypeData:[],\r\n                projectqtyData:[],\r\n                wrapHeight: 183,\r\n                wrapWidth: 366,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init();\r\n        },\r\n        watch:{\r\n            '$store.state.regionName':'getlist'\r\n        },\r\n        methods: {\r\n            init() {\r\n                this.getlist();\r\n                this.getDivHeight();\r\n            },\r\n            getDivHeight(){\r\n                this.wrapHeight = this.$refs.wrapHeight.offsetHeight;\r\n                this.wrapWidth = this.$refs.wrapHeight.offsetWidth;\r\n            },\r\n\r\n            //获取数据   工程类型：1-房屋建筑，2-铁路工程，3-公路，4-水利，5-其他\r\n            getlist(){\r\n                let tempData = [];\r\n                this.projecttypeData = [];\r\n                this.projectqtyData = [];\r\n                let dataI = [];\r\n                let area = this.$store.state.regionName;\r\n                this.getAjax('/mktmfc/forms/getprojecttyperanking?area='+area)\r\n                .then((result)=>{\r\n                    if(result.status === 200){\r\n                        tempData = result.data.projectTypeRanking;\r\n                        if(tempData.length === 0){\r\n                            this.projecttypeData = ['房屋建筑','铁路工程','公路工程','水利工程','其他工程'];\r\n                            this.projectqtyData = [0,0,0,0,0];\r\n                        }else {\r\n                            for(let i=0; i<tempData.length; i++){\r\n                                if(tempData[i].projecttype === 1){\r\n                                    tempData[i].projectname = '房屋建筑'\r\n                                }else if (tempData[i].projecttype === 2){\r\n                                    tempData[i].projectname = '铁路工程'\r\n                                }else if (tempData[i].projecttype === 3){\r\n                                    tempData[i].projectname = '公路工程'\r\n                                }else if (tempData[i].projecttype === 4){\r\n                                    tempData[i].projectname = '水利工程'\r\n                                }else if (tempData[i].projecttype === 5){\r\n                                    tempData[i].projectname = '其他工程'\r\n                                }\r\n\r\n                                dataI.push({name:tempData[i].projectname,qty:tempData[i].qty})\r\n                            }\r\n\r\n                            for(let i=0; i<dataI.length; i++){\r\n                                this.projecttypeData.push(dataI[i].name)\r\n                                this.projectqtyData.push(dataI[i].qty)\r\n                            }\r\n                        }\r\n                        \r\n                    }else {\r\n                        this.$message({\r\n                            message:this.returnIntercept(result),\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                })\r\n                .then(()=>{\r\n                    this.initEchart();\r\n                    this.setEchart(this.projecttypeData,this.projectqtyData);\r\n                })\r\n                \r\n            },\r\n\r\n            initEchart(){\r\n                this.bar_chart = echarts.init(this.$refs.bar_chart);\r\n            },\r\n\r\n            setEchart(projecttypeData,projectqtyData) {\r\n                this.bar_chart.setOption({\r\n                    tooltip : {\r\n                        trigger: 'axis',\r\n                        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                        }\r\n                    },\r\n                    // legend: {\r\n                    //     data:['本月','上月'],\r\n                    //     right: '7%',\r\n                    // },\r\n                    grid: {\r\n                        left: '20%',\r\n                        height:'70%',\r\n                        width:'75%',\r\n                        bottom: '20%'\r\n                    },\r\n                    xAxis : [\r\n                        {   \r\n                            type: 'value',\r\n                            name: '',\r\n                        }\r\n                    ],\r\n                    yAxis : [\r\n                        {\r\n                            type: 'category',\r\n                            name:'',\r\n                            // axisTick: {\r\n                            //     alignWithLabel: true\r\n                            // },\r\n                            data:projecttypeData\r\n                        },\r\n                    ],\r\n                    series : [\r\n                        {\r\n                            name:'方量',\r\n                            type:'bar',\r\n                            barWidth: '20%',\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: '#6fbae1'\r\n                                }\r\n                            },\r\n                            label: {\r\n                                normal: {\r\n                                    show: true,\r\n                                    position: 'right'\r\n                                }\r\n                            },\r\n                            data:projectqtyData\r\n                        },\r\n                    ]\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\" scoped type=\"text/less\">\r\n    .wrap-div {\r\n        height: 100%;\r\n    }\r\n    .bar-chart {\r\n        /*width: 510px;*/\r\n        /*height: 238px;*/\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// project_type.vue?1d7831be","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".wrap-div[data-v-3210390e]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"F:/pc_project/erp-aluminium/yunerp/src/page/erp_pc/erp_report/report_block/project_type.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAa,CACd\",\"file\":\"project_type.vue\",\"sourcesContent\":[\"\\n.wrap-div[data-v-3210390e] {\\n  height: 100%;\\n}\\n.bar-chart[data-v-3210390e] {\\n  /*width: 510px;*/\\n  /*height: 238px;*/\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3210390e\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_report/report_block/project_type.vue\n// module id = 1297\n// module chunks = 144","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3210390e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./project_type.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"0d27260d\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3210390e\",\"scoped\":true,\"hasInlineConfig\":false}!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/page/erp_pc/erp_report/report_block/project_type.vue\n// module id = 1428\n// module chunks = 144","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3210390e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./project_type.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./project_type.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3210390e\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./project_type.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-3210390e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/erp_pc/erp_report/report_block/project_type.vue\n// module id = 1556\n// module chunks = 144","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"wrapHeight\",\n    staticClass: \"wrap-div\"\n  }, [_c('div', {\n    ref: \"bar_chart\",\n    staticClass: \"bar-chart\",\n    style: ({\n      width: _vm.wrapWidth + 'px',\n      height: _vm.wrapHeight + 'px'\n    })\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-3210390e\",\"hasScoped\":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/page/erp_pc/erp_report/report_block/project_type.vue\n// module id = 1614\n// module chunks = 144","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 794\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 808\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 809\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 810\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 811\n// module chunks = 1 2 3 141 142 143 144 145","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 812\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 813\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 819\n// module chunks = 1 2 3 141 142 143 144 145","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 820\n// module chunks = 1 2 3 141 142 143 144 145","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 821\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 822\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 823\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 824\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 838\n// module chunks = 1 2 3 141 142 143 144 145","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 844\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 845\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 846\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 847\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 848\n// module chunks = 1 2 3 141 142 143 144 145","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 851\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 852\n// module chunks = 1 2 3 141 142 143 144 145","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 853\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 854\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 855\n// module chunks = 1 2 3 141 142 143 144 145","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 856\n// module chunks = 1 2 3 141 142 143 144 145","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 857\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 858\n// module chunks = 1 2 3 141 142 143 144 145","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 859\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 860\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 868\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 869\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 872\n// module chunks = 1 2 3 141 142 143 144 145","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 873\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 874\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 875\n// module chunks = 1 2 3 141 142 143 144 145","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 876\n// module chunks = 1 2 3 141 142 143 144 145","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 877\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 878\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 879\n// module chunks = 1 2 3 141 142 143 144 145","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 880\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 881\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 882\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 883\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 884\n// module chunks = 1 2 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 885\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 886\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 887\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 888\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 889\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 890\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 891\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 892\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 893\n// module chunks = 1 2 3 141 142 143 144 145","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 894\n// module chunks = 1 2 3 141 142 143 144 145","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 895\n// module chunks = 1 2 3 141 142 143 144 145","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 896\n// module chunks = 1 2 3 141 142 143 144 145","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 897\n// module chunks = 1 2 3 141 142 143 144 145","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 898\n// module chunks = 1 2 3 141 142 143 144 145","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 899\n// module chunks = 1 2 3 141 142 143 144 145","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 900\n// module chunks = 1 2 3 141 142 143 144 145","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 901\n// module chunks = 1 2 3 141 142 143 144 145","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 902\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 903\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 904\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 905\n// module chunks = 1 2 3 141 142 143 144 145","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 906\n// module chunks = 1 2 3 141 142 143 144 145","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 907\n// module chunks = 1 2 3 141 142 143 144 145","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 908\n// module chunks = 1 2 3 141 142 143 144 145","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 909\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 910\n// module chunks = 1 2 3 141 142 143 144 145","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 911\n// module chunks = 1 2 3 141 142 143 144 145","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 912\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 915\n// module chunks = 1 2 3 141 142 143 144 145","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 916\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 917\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 925\n// module chunks = 1 2 3 141 142 143 144 145","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 926\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 927\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 928\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 929\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 930\n// module chunks = 1 2 3 141 142 143 144 145","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 931\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 932\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 933\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 934\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 935\n// module chunks = 1 2 3 141 142 143 144 145","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 936\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 937\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 938\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 939\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 940\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 941\n// module chunks = 1 2 3 141 142 143 144 145","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 942\n// module chunks = 1 2 3 141 142 143 144 145","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 943\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 944\n// module chunks = 1 2 3 141 142 143 144 145","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 945\n// module chunks = 1 2 3 141 142 143 144 145","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 946\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 947\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 948\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 949\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 950\n// module chunks = 1 2 3 141 142 143 144 145","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 951\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 952\n// module chunks = 1 2 3 141 142 143 144 145","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 953\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 954\n// module chunks = 1 2 3 141 142 143 144 145","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 955\n// module chunks = 1 2 3 141 142 143 144 145","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 956\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 957\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 958\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 959\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 960\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 961\n// module chunks = 1 2 3 141 142 143 144 145","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 962\n// module chunks = 1 2 3 141 142 143 144 145","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 963\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 969\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 970\n// module chunks = 1 2 3 141 142 143 144 145","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 971\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 972\n// module chunks = 1 2 3 141 142 143 144 145","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 973\n// module chunks = 1 2 3 141 142 143 144 145","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 974\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 975\n// module chunks = 1 2 3 141 142 143 144 145","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 976\n// module chunks = 1 2 3 141 142 143 144 145","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 977\n// module chunks = 1 2 3 141 142 143 144 145","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 978\n// module chunks = 1 2 3 141 142 143 144 145","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 979\n// module chunks = 1 2 3 141 142 143 144 145","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 980\n// module chunks = 1 2 3 141 142 143 144 145","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 981\n// module chunks = 1 2 3 141 142 143 144 145","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 982\n// module chunks = 1 2 3 141 142 143 144 145","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 983\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 984\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 985\n// module chunks = 1 2 3 141 142 143 144 145","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 986\n// module chunks = 1 2 3 141 142 143 144 145","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 987\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 988\n// module chunks = 1 2 3 141 142 143 144 145","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 989\n// module chunks = 1 2 3 141 142 143 144 145","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 990\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 991\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 992\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 993\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 994\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 995\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 996\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 997\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 998\n// module chunks = 1 2 3 141 142 143 144 145","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 999\n// module chunks = 1 2 3 141 142 143 144 145"],"sourceRoot":""}